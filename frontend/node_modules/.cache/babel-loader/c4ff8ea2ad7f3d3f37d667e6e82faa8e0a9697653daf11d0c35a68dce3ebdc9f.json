{"ast":null,"code":"'use client';\n\nfunction clearProps(controls, state) {\n  const normalizedControls = controls.reduce((acc, control) => {\n    acc[control.prop] = control.libraryValue;\n    return acc;\n  }, {});\n  return Object.keys(state).reduce((acc, key) => {\n    if (state[key] !== normalizedControls[key]) {\n      acc[key] = state[key];\n    }\n    return acc;\n  }, {});\n}\nexport { clearProps };","map":{"version":3,"names":["clearProps","controls","state","normalizedControls","reduce","acc","control","prop","libraryValue","Object","keys","key"],"sources":["C:\\Users\\vintd\\Documents\\GitHub\\Reserv\\frontend\\node_modules\\@mantine\\ds\\src\\ConfiguratorDemo\\clear-props.ts"],"sourcesContent":["import type { ConfiguratorControlOptions } from './ConfiguratorDemo';\n\ntype Values = Record<string, any>;\n\nexport function clearProps(controls: ConfiguratorControlOptions[], state: Values) {\n  const normalizedControls = controls.reduce<Values>((acc, control) => {\n    acc[control.prop] = control.libraryValue;\n    return acc;\n  }, {});\n\n  return Object.keys(state).reduce<Values>((acc, key) => {\n    if (state[key] !== normalizedControls[key]) {\n      acc[key] = state[key];\n    }\n    return acc;\n  }, {});\n}\n"],"mappings":";;AAAO,SAASA,UAAUA,CAACC,QAAQ,EAAEC,KAAK,EAAE;EAC1C,MAAMC,kBAAkB,GAAGF,QAAQ,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAK;IAC3DD,GAAG,CAACC,OAAO,CAACC,IAAI,CAAC,GAAGD,OAAO,CAACE,YAAY;IACxC,OAAOH,GAAG;EACd,CAAG,EAAE,EAAE,CAAC;EACN,OAAOI,MAAM,CAACC,IAAI,CAACR,KAAK,CAAC,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEM,GAAG,KAAK;IAC7C,IAAIT,KAAK,CAACS,GAAG,CAAC,KAAKR,kBAAkB,CAACQ,GAAG,CAAC,EAAE;MAC1CN,GAAG,CAACM,GAAG,CAAC,GAAGT,KAAK,CAACS,GAAG,CAAC;IAC3B;IACI,OAAON,GAAG;EACd,CAAG,EAAE,EAAE,CAAC;AACR"},"metadata":{},"sourceType":"module","externalDependencies":[]}