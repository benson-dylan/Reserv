{"ast":null,"code":"'use client';\n\nimport _slicedToArray from \"C:/Users/vintd/Documents/GitHub/Reserv/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { getPrimaryShade } from '../get-primary-shade/get-primary-shade.mjs';\nfunction parseThemeColor(_ref) {\n  var color = _ref.color,\n    theme = _ref.theme,\n    colorScheme = _ref.colorScheme;\n  if (typeof color !== \"string\") {\n    throw new Error(\"[@mantine/core] Failed to parse color. Instead got \".concat(typeof color));\n  }\n  if (color === \"white\" || color === \"black\") {\n    return {\n      color: color,\n      value: color === \"white\" ? theme.white : theme.black,\n      shade: void 0,\n      isThemeColor: false,\n      variable: \"--mantine-color-\".concat(color)\n    };\n  }\n  var _color$split = color.split(\".\"),\n    _color$split2 = _slicedToArray(_color$split, 2),\n    _color = _color$split2[0],\n    shade = _color$split2[1];\n  var colorShade = shade ? Number(shade) : void 0;\n  var isThemeColor = (_color in theme.colors);\n  if (isThemeColor) {\n    return {\n      color: _color,\n      value: colorShade !== void 0 ? theme.colors[_color][colorShade] : theme.colors[_color][getPrimaryShade(theme, colorScheme || \"light\")],\n      shade: colorShade,\n      isThemeColor: isThemeColor,\n      variable: shade ? \"--mantine-color-\".concat(_color, \"-\").concat(colorShade) : \"--mantine-color-\".concat(_color, \"-filled\")\n    };\n  }\n  return {\n    color: color,\n    value: color,\n    isThemeColor: isThemeColor,\n    shade: colorShade,\n    variable: void 0\n  };\n}\nexport { parseThemeColor };","map":{"version":3,"names":["parseThemeColor","_ref","color","theme","colorScheme","Error","concat","value","white","black","shade","isThemeColor","variable","_color$split","split","_color$split2","_slicedToArray","_color","colorShade","Number","colors","getPrimaryShade"],"sources":["C:\\Users\\vintd\\Documents\\GitHub\\Reserv\\frontend\\node_modules\\@mantine\\core\\src\\core\\MantineProvider\\color-functions\\parse-theme-color\\parse-theme-color.ts"],"sourcesContent":["import type { MantineTheme, MantineColorShade, MantineColorScheme } from '../../theme.types';\nimport type { CssVariable } from '../../../Box';\nimport { getPrimaryShade } from '../get-primary-shade/get-primary-shade';\n\ninterface ParseThemeColorOptions {\n  color: unknown;\n  theme: MantineTheme;\n  colorScheme?: MantineColorScheme;\n}\n\ninterface ParseThemeColorResult {\n  color: string;\n  value: string;\n  shade: MantineColorShade | undefined;\n  variable: CssVariable | undefined;\n  isThemeColor: boolean;\n}\n\nexport function parseThemeColor({\n  color,\n  theme,\n  colorScheme,\n}: ParseThemeColorOptions): ParseThemeColorResult {\n  if (typeof color !== 'string') {\n    throw new Error(`[@mantine/core] Failed to parse color. Instead got ${typeof color}`);\n  }\n\n  if (color === 'white' || color === 'black') {\n    return {\n      color,\n      value: color === 'white' ? theme.white : theme.black,\n      shade: undefined,\n      isThemeColor: false,\n      variable: `--mantine-color-${color}`,\n    };\n  }\n\n  const [_color, shade] = color.split('.');\n  const colorShade = shade ? (Number(shade) as MantineColorShade) : undefined;\n  const isThemeColor = _color in theme.colors;\n\n  if (isThemeColor) {\n    return {\n      color: _color,\n      value:\n        colorShade !== undefined\n          ? theme.colors[_color][colorShade]\n          : theme.colors[_color][getPrimaryShade(theme, colorScheme || 'light')],\n      shade: colorShade,\n      isThemeColor,\n      variable: shade\n        ? `--mantine-color-${_color}-${colorShade}`\n        : `--mantine-color-${_color}-filled`,\n    };\n  }\n\n  return {\n    color,\n    value: color,\n    isThemeColor,\n    shade: colorShade,\n    variable: undefined,\n  };\n}\n"],"mappings":";;;;AACO,SAASA,eAAeA,CAAAC,IAAA,EAI5B;EAAA,IAHDC,KAAK,GAAAD,IAAA,CAALC,KAAK;IACLC,KAAK,GAAAF,IAAA,CAALE,KAAK;IACLC,WAAW,GAAAH,IAAA,CAAXG,WAAW;EAEX,IAAI,OAAOF,KAAK,KAAK,QAAQ,EAAE;IAC7B,MAAM,IAAIG,KAAK,uDAAAC,MAAA,CAAuD,OAAOJ,KAAK,CAAE,CAAC;EACzF;EACE,IAAIA,KAAK,KAAK,OAAO,IAAIA,KAAK,KAAK,OAAO,EAAE;IAC1C,OAAO;MACLA,KAAK,EAALA,KAAK;MACLK,KAAK,EAAEL,KAAK,KAAK,OAAO,GAAGC,KAAK,CAACK,KAAK,GAAGL,KAAK,CAACM,KAAK;MACpDC,KAAK,EAAE,KAAK,CAAC;MACbC,YAAY,EAAE,KAAK;MACnBC,QAAQ,qBAAAN,MAAA,CAAqBJ,KAAK;IACxC,CAAK;EACL;EACE,IAAAW,YAAA,GAAwBX,KAAK,CAACY,KAAK,CAAC,GAAG,CAAC;IAAAC,aAAA,GAAAC,cAAA,CAAAH,YAAA;IAAjCI,MAAM,GAAAF,aAAA;IAAEL,KAAK,GAAAK,aAAA;EACpB,IAAMG,UAAU,GAAGR,KAAK,GAAGS,MAAM,CAACT,KAAK,CAAC,GAAG,KAAK,CAAC;EACjD,IAAMC,YAAY,IAAGM,MAAM,IAAId,KAAK,CAACiB,MAAM;EAC3C,IAAIT,YAAY,EAAE;IAChB,OAAO;MACLT,KAAK,EAAEe,MAAM;MACbV,KAAK,EAAEW,UAAU,KAAK,KAAK,CAAC,GAAGf,KAAK,CAACiB,MAAM,CAACH,MAAM,CAAC,CAACC,UAAU,CAAC,GAAGf,KAAK,CAACiB,MAAM,CAACH,MAAM,CAAC,CAACI,eAAe,CAAClB,KAAK,EAAEC,WAAW,IAAI,OAAO,CAAC,CAAC;MACtIM,KAAK,EAAEQ,UAAU;MACjBP,YAAY,EAAZA,YAAY;MACZC,QAAQ,EAAEF,KAAK,sBAAAJ,MAAA,CAAsBW,MAAM,OAAAX,MAAA,CAAIY,UAAU,uBAAAZ,MAAA,CAAwBW,MAAM;IAC7F,CAAK;EACL;EACE,OAAO;IACLf,KAAK,EAALA,KAAK;IACLK,KAAK,EAAEL,KAAK;IACZS,YAAY,EAAZA,YAAY;IACZD,KAAK,EAAEQ,UAAU;IACjBN,QAAQ,EAAE,KAAK;EACnB,CAAG;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}