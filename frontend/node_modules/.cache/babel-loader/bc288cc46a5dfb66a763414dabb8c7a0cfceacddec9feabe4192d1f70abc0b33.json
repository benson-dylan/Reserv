{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { useComboboxContext } from '../Combobox.context.mjs';\nimport { Popover } from '../../Popover/Popover.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport { isElement } from '../../../core/utils/is-element/is-element.mjs';\nvar defaultProps = {\n  refProp: \"ref\"\n};\nvar ComboboxDropdownTarget = factory(function (props, ref) {\n  var _useProps = useProps(\"ComboboxDropdownTarget\", defaultProps, props),\n    children = _useProps.children,\n    refProp = _useProps.refProp;\n  useComboboxContext();\n  if (!isElement(children)) {\n    throw new Error(\"Combobox.DropdownTarget component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported\");\n  }\n  return /* @__PURE__ */React.createElement(Popover.Target, {\n    ref: ref,\n    refProp: refProp\n  }, children);\n});\nComboboxDropdownTarget.displayName = \"@mantine/core/ComboboxDropdownTarget\";\nexport { ComboboxDropdownTarget };","map":{"version":3,"names":["defaultProps","refProp","ComboboxDropdownTarget","factory","props","ref","_useProps","useProps","children","useComboboxContext","isElement","Error","React","createElement","Popover","Target","displayName"],"sources":["C:\\Users\\vintd\\Documents\\GitHub\\Reserv\\frontend\\node_modules\\@mantine\\core\\src\\components\\Combobox\\ComboboxDropdownTarget\\ComboboxDropdownTarget.tsx"],"sourcesContent":["import React from 'react';\nimport { Popover } from '../../Popover';\nimport { isElement, useProps, factory, Factory } from '../../../core';\nimport { useComboboxContext } from '../Combobox.context';\n\nexport interface ComboboxDropdownTargetProps {\n  /** Target element */\n  children: React.ReactNode;\n\n  /** Key of the prop that should be used to access element ref */\n  refProp?: string;\n}\n\nconst defaultProps: Partial<ComboboxDropdownTargetProps> = {\n  refProp: 'ref',\n};\n\nexport type ComboboxDropdownTargetFactory = Factory<{\n  props: ComboboxDropdownTargetProps;\n  ref: HTMLElement;\n  compound: true;\n}>;\n\nexport const ComboboxDropdownTarget = factory<ComboboxDropdownTargetFactory>((props, ref) => {\n  const { children, refProp } = useProps('ComboboxDropdownTarget', defaultProps, props);\n  useComboboxContext();\n\n  if (!isElement(children)) {\n    throw new Error(\n      'Combobox.DropdownTarget component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported'\n    );\n  }\n\n  return (\n    <Popover.Target ref={ref} refProp={refProp}>\n      {children}\n    </Popover.Target>\n  );\n});\n\nComboboxDropdownTarget.displayName = '@mantine/core/ComboboxDropdownTarget';\n"],"mappings":";;;;;;;;AAIA,IAAMA,YAAY,GAAG;EACnBC,OAAO,EAAE;AACX,CAAC;AACW,IAACC,sBAAsB,GAAGC,OAAO,CAAC,UAACC,KAAK,EAAEC,GAAG,EAAK;EAC5D,IAAAC,SAAA,GAA8BC,QAAQ,CAAC,wBAAwB,EAAEP,YAAY,EAAEI,KAAK,CAAC;IAA7EI,QAAQ,GAAAF,SAAA,CAARE,QAAQ;IAAEP,OAAO,GAAAK,SAAA,CAAPL,OAAO;EACzBQ,kBAAkB,EAAE;EACpB,IAAI,CAACC,SAAS,CAACF,QAAQ,CAAC,EAAE;IACxB,MAAM,IAAIG,KAAK,CACb,2KACN,CAAK;EACL;EACE,sBAAuBC,KAAK,CAACC,aAAa,CAACC,OAAO,CAACC,MAAM,EAAE;IAAEV,GAAG,EAAHA,GAAG;IAAEJ,OAAO,EAAPA;EAAO,CAAE,EAAEO,QAAQ,CAAC;AACxF,CAAC;AACDN,sBAAsB,CAACc,WAAW,GAAG,sCAAsC"},"metadata":{},"sourceType":"module","externalDependencies":[]}