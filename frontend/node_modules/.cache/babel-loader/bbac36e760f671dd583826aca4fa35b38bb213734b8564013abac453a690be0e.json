{"ast":null,"code":"'use client';\n\nimport _toConsumableArray from \"C:/Users/vintd/Documents/GitHub/Reserv/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"C:/Users/vintd/Documents/GitHub/Reserv/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { ChipGroupProvider } from '../ChipGroup.context.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nvar defaultProps = {};\nfunction ChipGroup(props) {\n  var _useProps = useProps(\"ChipGroup\", defaultProps, props),\n    value = _useProps.value,\n    defaultValue = _useProps.defaultValue,\n    onChange = _useProps.onChange,\n    multiple = _useProps.multiple,\n    children = _useProps.children;\n  var _useUncontrolled = useUncontrolled({\n      value: value,\n      defaultValue: defaultValue,\n      finalValue: multiple ? [] : null,\n      onChange: onChange\n    }),\n    _useUncontrolled2 = _slicedToArray(_useUncontrolled, 2),\n    _value = _useUncontrolled2[0],\n    setValue = _useUncontrolled2[1];\n  var isChipSelected = function isChipSelected(val) {\n    return Array.isArray(_value) ? _value.includes(val) : val === _value;\n  };\n  var handleChange = function handleChange(event) {\n    var val = event.currentTarget.value;\n    if (Array.isArray(_value)) {\n      setValue(_value.includes(val) ? _value.filter(function (v) {\n        return v !== val;\n      }) : [].concat(_toConsumableArray(_value), [val]));\n    } else {\n      setValue(val);\n    }\n  };\n  return /* @__PURE__ */React.createElement(ChipGroupProvider, {\n    value: {\n      isChipSelected: isChipSelected,\n      onChange: handleChange,\n      multiple: multiple\n    }\n  }, children);\n}\nChipGroup.displayName = \"@mantine/core/ChipGroup\";\nexport { ChipGroup };","map":{"version":3,"names":["defaultProps","ChipGroup","props","_useProps","useProps","value","defaultValue","onChange","multiple","children","_useUncontrolled","useUncontrolled","finalValue","_useUncontrolled2","_slicedToArray","_value","setValue","isChipSelected","val","Array","isArray","includes","handleChange","event","currentTarget","filter","v","concat","_toConsumableArray","React","createElement","ChipGroupProvider","displayName"],"sources":["C:\\Users\\vintd\\Documents\\GitHub\\Reserv\\frontend\\node_modules\\@mantine\\core\\src\\components\\Chip\\ChipGroup\\ChipGroup.tsx"],"sourcesContent":["/* eslint-disable react/no-unused-prop-types */\nimport React from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { useProps } from '../../../core';\nimport { ChipGroupProvider } from '../ChipGroup.context';\n\nexport interface ChipGroupProps<T extends boolean = false> {\n  /** Allow multiple values to be selected at a time */\n  multiple?: T;\n\n  /** Controlled component value */\n  value?: T extends true ? string[] : string | null;\n\n  /** Uncontrolled component initial value */\n  defaultValue?: T extends true ? string[] : string | null;\n\n  /** Called when value changes */\n  onChange?: (value: T extends true ? string[] : string) => void;\n\n  /** <Chip /> components */\n  children?: React.ReactNode;\n}\n\nconst defaultProps: Partial<ChipGroupProps<false>> = {};\n\nexport function ChipGroup<T extends boolean>(props: ChipGroupProps<T>) {\n  const { value, defaultValue, onChange, multiple, children } = useProps(\n    'ChipGroup',\n    defaultProps as any,\n    props\n  );\n\n  const [_value, setValue] = useUncontrolled<string | null | string[]>({\n    value,\n    defaultValue,\n    finalValue: multiple ? ([] as string[]) : null,\n    onChange,\n  });\n\n  const isChipSelected = (val: string) =>\n    Array.isArray(_value) ? _value.includes(val) : val === _value;\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const val = event.currentTarget.value;\n    if (Array.isArray(_value)) {\n      setValue(_value.includes(val) ? _value.filter((v) => v !== val) : [..._value, val]);\n    } else {\n      setValue(val);\n    }\n  };\n\n  return (\n    <ChipGroupProvider value={{ isChipSelected, onChange: handleChange, multiple }}>\n      {children}\n    </ChipGroupProvider>\n  );\n}\n\nChipGroup.displayName = '@mantine/core/ChipGroup';\n"],"mappings":";;;;;;;;AAIA,IAAMA,YAAY,GAAG,EAAE;AAChB,SAASC,SAASA,CAACC,KAAK,EAAE;EAC/B,IAAAC,SAAA,GAA8DC,QAAQ,CACpE,WAAW,EACXJ,YAAY,EACZE,KACJ,CAAG;IAJOG,KAAK,GAAAF,SAAA,CAALE,KAAK;IAAEC,YAAY,GAAAH,SAAA,CAAZG,YAAY;IAAEC,QAAQ,GAAAJ,SAAA,CAARI,QAAQ;IAAEC,QAAQ,GAAAL,SAAA,CAARK,QAAQ;IAAEC,QAAQ,GAAAN,SAAA,CAARM,QAAQ;EAKzD,IAAAC,gBAAA,GAA2BC,eAAe,CAAC;MACzCN,KAAK,EAALA,KAAK;MACLC,YAAY,EAAZA,YAAY;MACZM,UAAU,EAAEJ,QAAQ,GAAG,EAAE,GAAG,IAAI;MAChCD,QAAQ,EAARA;IACJ,CAAG,CAAC;IAAAM,iBAAA,GAAAC,cAAA,CAAAJ,gBAAA;IALKK,MAAM,GAAAF,iBAAA;IAAEG,QAAQ,GAAAH,iBAAA;EAMvB,IAAMI,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,GAAG;IAAA,OAAKC,KAAK,CAACC,OAAO,CAACL,MAAM,CAAC,GAAGA,MAAM,CAACM,QAAQ,CAACH,GAAG,CAAC,GAAGA,GAAG,KAAKH,MAAM;EAAA;EAC7F,IAAMO,YAAY,GAAG,SAAfA,YAAYA,CAAIC,KAAK,EAAK;IAC9B,IAAML,GAAG,GAAGK,KAAK,CAACC,aAAa,CAACnB,KAAK;IACrC,IAAIc,KAAK,CAACC,OAAO,CAACL,MAAM,CAAC,EAAE;MACzBC,QAAQ,CAACD,MAAM,CAACM,QAAQ,CAACH,GAAG,CAAC,GAAGH,MAAM,CAACU,MAAM,CAAC,UAACC,CAAC;QAAA,OAAKA,CAAC,KAAKR,GAAG;MAAA,EAAC,MAAAS,MAAA,CAAAC,kBAAA,CAAOb,MAAM,IAAEG,GAAG,EAAC,CAAC;IACzF,CAAK,MAAM;MACLF,QAAQ,CAACE,GAAG,CAAC;IACnB;EACA,CAAG;EACD,sBAAuBW,KAAK,CAACC,aAAa,CAACC,iBAAiB,EAAE;IAAE1B,KAAK,EAAE;MAAEY,cAAc,EAAdA,cAAc;MAAEV,QAAQ,EAAEe,YAAY;MAAEd,QAAQ,EAARA;IAAQ;EAAE,CAAE,EAAEC,QAAQ,CAAC;AAC1I;AACAR,SAAS,CAAC+B,WAAW,GAAG,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}