{"ast":null,"code":"'use client';\n\nimport { useUncontrolled } from '@mantine/hooks';\nimport { useRef } from 'react';\nimport { useDatesContext } from '../../components/DatesProvider/use-dates-context.mjs';\nimport { shiftTimezone } from '../../utils/shift-timezone.mjs';\nconst getEmptyValue = type => type === \"range\" ? [null, null] : type === \"multiple\" ? [] : null;\nfunction useUncontrolledDates({\n  type,\n  value,\n  defaultValue,\n  onChange,\n  applyTimezone = true\n}) {\n  const storedType = useRef(type);\n  const ctx = useDatesContext();\n  const [_value, _setValue, controlled] = useUncontrolled({\n    value: shiftTimezone(\"add\", value, ctx.getTimezone(), !applyTimezone),\n    defaultValue: shiftTimezone(\"add\", defaultValue, ctx.getTimezone(), !applyTimezone),\n    finalValue: getEmptyValue(type),\n    onChange: newDate => {\n      onChange == null ? void 0 : onChange(shiftTimezone(\"remove\", newDate, ctx.getTimezone(), !applyTimezone));\n    }\n  });\n  let _finalValue = _value;\n  if (storedType.current !== type) {\n    storedType.current = type;\n    if (value === void 0) {\n      _finalValue = defaultValue !== void 0 ? defaultValue : getEmptyValue(type);\n      _setValue(_finalValue);\n    } else if (process.env.NODE_ENV === \"development\") {\n      switch (type) {\n        case \"default\":\n          if (value !== null && typeof value !== \"string\") {\n            console.error(\"[@mantine/dates/use-uncontrolled-dates] Value must be type of `null` or `string`\");\n          }\n          break;\n        case \"multiple\":\n          if (!(value instanceof Array)) {\n            console.error(\"[@mantine/dates/use-uncontrolled-dates] Value must be type of `string[]`\");\n          }\n          break;\n        case \"range\":\n          if (!(value instanceof Array) || value.length !== 2) {\n            console.error(\"[@mantine/dates/use-uncontrolled-dates] Value must be type of `[string, string]`\");\n          }\n          break;\n      }\n    }\n  }\n  return [_finalValue, _setValue, controlled];\n}\nexport { useUncontrolledDates };","map":{"version":3,"names":["getEmptyValue","type","useUncontrolledDates","value","defaultValue","onChange","applyTimezone","storedType","useRef","ctx","useDatesContext","_value","_setValue","controlled","useUncontrolled","shiftTimezone","getTimezone","finalValue","newDate","_finalValue","current","process","env","NODE_ENV","console","error","Array","length"],"sources":["C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\node_modules\\@mantine\\dates\\src\\hooks\\use-uncontrolled-dates\\use-uncontrolled-dates.ts"],"sourcesContent":["import { useUncontrolled } from '@mantine/hooks';\nimport { useRef } from 'react';\nimport { DatePickerType, DatePickerValue } from '../../types';\nimport { shiftTimezone } from '../../utils';\nimport { useDatesContext } from '../../components/DatesProvider';\n\ninterface UseUncontrolledDates<Type extends DatePickerType = 'default'> {\n  type: Type;\n  value: DatePickerValue<Type> | undefined;\n  defaultValue: DatePickerValue<Type> | undefined;\n  onChange: ((value: DatePickerValue<Type>) => void) | undefined;\n  applyTimezone?: boolean;\n}\n\nconst getEmptyValue = <Type extends DatePickerType = 'default'>(type: Type) =>\n  type === 'range' ? [null, null] : type === 'multiple' ? [] : null;\n\nexport function useUncontrolledDates<Type extends DatePickerType = 'default'>({\n  type,\n  value,\n  defaultValue,\n  onChange,\n  applyTimezone = true,\n}: UseUncontrolledDates<Type>) {\n  const storedType = useRef<Type>(type);\n  const ctx = useDatesContext();\n  const [_value, _setValue, controlled] = useUncontrolled<any>({\n    value: shiftTimezone('add', value, ctx.getTimezone(), !applyTimezone),\n    defaultValue: shiftTimezone('add', defaultValue, ctx.getTimezone(), !applyTimezone),\n    finalValue: getEmptyValue(type),\n    onChange: (newDate) => {\n      onChange?.(shiftTimezone('remove', newDate, ctx.getTimezone(), !applyTimezone));\n    },\n  });\n\n  let _finalValue = _value;\n\n  if (storedType.current !== type) {\n    // Type has changed. Do some checks or resets\n\n    storedType.current = type;\n    if (value === undefined) {\n      // Reset uncontrolled value as types aren't compatible\n      _finalValue = defaultValue !== undefined ? defaultValue : getEmptyValue(type);\n      _setValue(_finalValue);\n    } else if (process.env.NODE_ENV === 'development') {\n      // Throw errors in dev mode in case type of value isn't correct\n      switch (type) {\n        case 'default':\n          if (value !== null && typeof value !== 'string') {\n            // eslint-disable-next-line no-console\n            console.error(\n              '[@mantine/dates/use-uncontrolled-dates] Value must be type of `null` or `string`'\n            );\n          }\n          break;\n        case 'multiple':\n          if (!(value instanceof Array)) {\n            // eslint-disable-next-line no-console\n            console.error(\n              '[@mantine/dates/use-uncontrolled-dates] Value must be type of `string[]`'\n            );\n          }\n          break;\n        case 'range':\n          if (!(value instanceof Array) || value.length !== 2) {\n            // eslint-disable-next-line no-console\n            console.error(\n              '[@mantine/dates/use-uncontrolled-dates] Value must be type of `[string, string]`'\n            );\n          }\n          break;\n      }\n    }\n  }\n\n  return [_finalValue, _setValue, controlled];\n}\n"],"mappings":";;;;;;AAIA,MAAMA,aAAa,GAAIC,IAAI,IAAKA,IAAI,KAAK,OAAO,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,GAAGA,IAAI,KAAK,UAAU,GAAG,EAAE,GAAG,IAAI;AAC1F,SAASC,oBAAoBA,CAAC;EACnCD,IAAI;EACJE,KAAK;EACLC,YAAY;EACZC,QAAQ;EACRC,aAAa,GAAG;AAClB,CAAC,EAAE;EACD,MAAMC,UAAU,GAAGC,MAAM,CAACP,IAAI,CAAC;EAC/B,MAAMQ,GAAG,GAAGC,eAAe,EAAE;EAC7B,MAAM,CAACC,MAAM,EAAEC,SAAS,EAAEC,UAAU,CAAC,GAAGC,eAAe,CAAC;IACtDX,KAAK,EAAEY,aAAa,CAAC,KAAK,EAAEZ,KAAK,EAAEM,GAAG,CAACO,WAAW,EAAE,EAAE,CAACV,aAAa,CAAC;IACrEF,YAAY,EAAEW,aAAa,CAAC,KAAK,EAAEX,YAAY,EAAEK,GAAG,CAACO,WAAW,EAAE,EAAE,CAACV,aAAa,CAAC;IACnFW,UAAU,EAAEjB,aAAa,CAACC,IAAI,CAAC;IAC/BI,QAAQ,EAAGa,OAAO,IAAK;MACrBb,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACU,aAAa,CAAC,QAAQ,EAAEG,OAAO,EAAET,GAAG,CAACO,WAAW,EAAE,EAAE,CAACV,aAAa,CAAC,CAAC;IAC/G;EACA,CAAG,CAAC;EACF,IAAIa,WAAW,GAAGR,MAAM;EACxB,IAAIJ,UAAU,CAACa,OAAO,KAAKnB,IAAI,EAAE;IAC/BM,UAAU,CAACa,OAAO,GAAGnB,IAAI;IACzB,IAAIE,KAAK,KAAK,KAAK,CAAC,EAAE;MACpBgB,WAAW,GAAGf,YAAY,KAAK,KAAK,CAAC,GAAGA,YAAY,GAAGJ,aAAa,CAACC,IAAI,CAAC;MAC1EW,SAAS,CAACO,WAAW,CAAC;IAC5B,CAAK,MAAM,IAAIE,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;MACjD,QAAQtB,IAAI;QACV,KAAK,SAAS;UACZ,IAAIE,KAAK,KAAK,IAAI,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;YAC/CqB,OAAO,CAACC,KAAK,CACX,kFACd,CAAa;UACb;UACU;QACF,KAAK,UAAU;UACb,IAAI,EAAEtB,KAAK,YAAYuB,KAAK,CAAC,EAAE;YAC7BF,OAAO,CAACC,KAAK,CACX,0EACd,CAAa;UACb;UACU;QACF,KAAK,OAAO;UACV,IAAI,EAAEtB,KAAK,YAAYuB,KAAK,CAAC,IAAIvB,KAAK,CAACwB,MAAM,KAAK,CAAC,EAAE;YACnDH,OAAO,CAACC,KAAK,CACX,kFACd,CAAa;UACb;UACU;MACV;IACA;EACA;EACE,OAAO,CAACN,WAAW,EAAEP,SAAS,EAAEC,UAAU,CAAC;AAC7C"},"metadata":{},"sourceType":"module","externalDependencies":[]}