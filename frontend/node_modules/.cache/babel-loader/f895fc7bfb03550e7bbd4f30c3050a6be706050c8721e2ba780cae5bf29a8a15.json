{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { useMantineStyleNonce, useMantineCssVariablesResolver } from '../Mantine.context.mjs';\nimport { convertCssVariables } from '../convert-css-variables/convert-css-variables.mjs';\nimport { getMergedVariables } from './get-merged-variables.mjs';\nimport { removeDefaultVariables } from './remove-default-variables.mjs';\nimport { useMantineTheme } from '../MantineThemeProvider/MantineThemeProvider.mjs';\nfunction getColorSchemeCssVariables(selector) {\n  return \"\\n  \".concat(selector, \"[data-mantine-color-scheme=\\\"dark\\\"] { --mantine-color-scheme: dark; }\\n  \").concat(selector, \"[data-mantine-color-scheme=\\\"light\\\"] { --mantine-color-scheme: light; }\\n\");\n}\nfunction MantineCssVariables(_ref) {\n  var cssVariablesSelector = _ref.cssVariablesSelector;\n  var theme = useMantineTheme();\n  var nonce = useMantineStyleNonce();\n  var generator = useMantineCssVariablesResolver();\n  var mergedVariables = getMergedVariables({\n    theme: theme,\n    generator: generator\n  });\n  var shouldCleanVariables = cssVariablesSelector === \":root\";\n  var cleanedVariables = shouldCleanVariables ? removeDefaultVariables(mergedVariables) : mergedVariables;\n  var css = convertCssVariables(cleanedVariables, cssVariablesSelector);\n  if (css) {\n    return /* @__PURE__ */React.createElement(\"style\", {\n      \"data-mantine-styles\": true,\n      nonce: nonce == null ? void 0 : nonce(),\n      dangerouslySetInnerHTML: {\n        __html: \"\".concat(css).concat(shouldCleanVariables ? \"\" : getColorSchemeCssVariables(cssVariablesSelector))\n      }\n    });\n  }\n  return null;\n}\nMantineCssVariables.displayName = \"@mantine/CssVariables\";\nexport { MantineCssVariables };","map":{"version":3,"names":["getColorSchemeCssVariables","selector","concat","MantineCssVariables","_ref","cssVariablesSelector","theme","useMantineTheme","nonce","useMantineStyleNonce","generator","useMantineCssVariablesResolver","mergedVariables","getMergedVariables","shouldCleanVariables","cleanedVariables","removeDefaultVariables","css","convertCssVariables","React","createElement","dangerouslySetInnerHTML","__html","displayName"],"sources":["C:\\Users\\vintd\\Documents\\GitHub\\Reserv\\frontend\\node_modules\\@mantine\\core\\src\\core\\MantineProvider\\MantineCssVariables\\MantineCssVariables.tsx"],"sourcesContent":["import React from 'react';\nimport { useMantineStyleNonce, useMantineCssVariablesResolver } from '../Mantine.context';\nimport { useMantineTheme } from '../MantineThemeProvider';\nimport { convertCssVariables } from '../convert-css-variables/convert-css-variables';\nimport { getMergedVariables } from './get-merged-variables';\nimport { removeDefaultVariables } from './remove-default-variables';\n\ninterface MantineCssVariablesProps {\n  cssVariablesSelector: string;\n}\n\nfunction getColorSchemeCssVariables(selector: string) {\n  return `\n  ${selector}[data-mantine-color-scheme=\"dark\"] { --mantine-color-scheme: dark; }\n  ${selector}[data-mantine-color-scheme=\"light\"] { --mantine-color-scheme: light; }\n`;\n}\n\nexport function MantineCssVariables({ cssVariablesSelector }: MantineCssVariablesProps) {\n  const theme = useMantineTheme();\n  const nonce = useMantineStyleNonce();\n  const generator = useMantineCssVariablesResolver();\n  const mergedVariables = getMergedVariables({ theme, generator });\n  const shouldCleanVariables = cssVariablesSelector === ':root';\n  const cleanedVariables = shouldCleanVariables\n    ? removeDefaultVariables(mergedVariables)\n    : mergedVariables;\n  const css = convertCssVariables(cleanedVariables, cssVariablesSelector);\n\n  if (css) {\n    return (\n      <style\n        data-mantine-styles\n        nonce={nonce?.()}\n        dangerouslySetInnerHTML={{\n          __html: `${css}${\n            shouldCleanVariables ? '' : getColorSchemeCssVariables(cssVariablesSelector)\n          }`,\n        }}\n      />\n    );\n  }\n\n  return null;\n}\n\nMantineCssVariables.displayName = '@mantine/CssVariables';\n"],"mappings":";;;;;;;;AAMA,SAASA,0BAA0BA,CAACC,QAAQ,EAAE;EAC5C,cAAAC,MAAA,CACED,QAAQ,gFAAAC,MAAA,CACRD,QAAQ;AAEZ;AACO,SAASE,mBAAmBA,CAAAC,IAAA,EAA2B;EAAA,IAAxBC,oBAAoB,GAAAD,IAAA,CAApBC,oBAAoB;EACxD,IAAMC,KAAK,GAAGC,eAAe,EAAE;EAC/B,IAAMC,KAAK,GAAGC,oBAAoB,EAAE;EACpC,IAAMC,SAAS,GAAGC,8BAA8B,EAAE;EAClD,IAAMC,eAAe,GAAGC,kBAAkB,CAAC;IAAEP,KAAK,EAALA,KAAK;IAAEI,SAAS,EAATA;EAAS,CAAE,CAAC;EAChE,IAAMI,oBAAoB,GAAGT,oBAAoB,KAAK,OAAO;EAC7D,IAAMU,gBAAgB,GAAGD,oBAAoB,GAAGE,sBAAsB,CAACJ,eAAe,CAAC,GAAGA,eAAe;EACzG,IAAMK,GAAG,GAAGC,mBAAmB,CAACH,gBAAgB,EAAEV,oBAAoB,CAAC;EACvE,IAAIY,GAAG,EAAE;IACP,sBAAuBE,KAAK,CAACC,aAAa,CACxC,OAAO,EACP;MACE,qBAAqB,EAAE,IAAI;MAC3BZ,KAAK,EAAEA,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,KAAK,EAAE;MACvCa,uBAAuB,EAAE;QACvBC,MAAM,KAAApB,MAAA,CAAKe,GAAG,EAAAf,MAAA,CAAGY,oBAAoB,GAAG,EAAE,GAAGd,0BAA0B,CAACK,oBAAoB,CAAC;MACvG;IACA,CACA,CAAK;EACL;EACE,OAAO,IAAI;AACb;AACAF,mBAAmB,CAACoB,WAAW,GAAG,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}