{"ast":null,"code":"'use client';\n\nimport _slicedToArray from \"C:/Users/vintd/Documents/GitHub/Reserv/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { createSafeContext } from '../../core/utils/create-safe-context/create-safe-context.mjs';\nvar _createSafeContext = createSafeContext(\"Accordion component was not found in the tree\"),\n  _createSafeContext2 = _slicedToArray(_createSafeContext, 2),\n  AccordionProvider = _createSafeContext2[0],\n  useAccordionContext = _createSafeContext2[1];\nexport { AccordionProvider, useAccordionContext };","map":{"version":3,"names":["_createSafeContext","createSafeContext","_createSafeContext2","_slicedToArray","AccordionProvider","useAccordionContext"],"sources":["C:\\Users\\vintd\\Documents\\GitHub\\Reserv\\frontend\\node_modules\\@mantine\\core\\src\\components\\Accordion\\Accordion.context.ts"],"sourcesContent":["import { createSafeContext, GetStylesApi } from '../../core';\nimport { AccordionChevronPosition, AccordionHeadingOrder } from './Accordion.types';\nimport type { AccordionFactory } from './Accordion';\n\ninterface AccordionContext {\n  loop: boolean | undefined;\n  transitionDuration: number | undefined;\n  disableChevronRotation: boolean | undefined;\n  chevronPosition: AccordionChevronPosition | undefined;\n  order: AccordionHeadingOrder | undefined;\n  chevron: React.ReactNode;\n  onChange: (value: string) => void;\n  isItemActive: (value: string) => boolean;\n  getControlId: (value: string) => string;\n  getRegionId: (value: string) => string;\n  getStyles: GetStylesApi<AccordionFactory>;\n  variant: string | undefined;\n  unstyled: boolean | undefined;\n}\n\nexport const [AccordionProvider, useAccordionContext] = createSafeContext<AccordionContext>(\n  'Accordion component was not found in the tree'\n);\n"],"mappings":";;;;AACY,IAAAA,kBAAA,GAA4CC,iBAAiB,CACvE,+CACF;EAAAC,mBAAA,GAAAC,cAAA,CAAAH,kBAAA;EAFcI,iBAAiB,GAAAF,mBAAA;EAAEG,mBAAmB,GAAAH,mBAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}