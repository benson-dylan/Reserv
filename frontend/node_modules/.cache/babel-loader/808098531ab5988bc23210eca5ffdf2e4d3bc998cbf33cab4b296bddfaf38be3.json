{"ast":null,"code":"'use client';\n\nimport _slicedToArray from \"C:/Users/vintd/Documents/GitHub/Reserv/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React, { createContext, useContext, useState } from 'react';\nimport { useIsomorphicEffect } from '@mantine/hooks';\nvar DirectionContext = createContext({\n  dir: \"ltr\",\n  toggleDirection: function toggleDirection() {},\n  setDirection: function setDirection() {}\n});\nfunction useDirection() {\n  return useContext(DirectionContext);\n}\nfunction DirectionProvider(_ref) {\n  var children = _ref.children,\n    _ref$initialDirection = _ref.initialDirection,\n    initialDirection = _ref$initialDirection === void 0 ? \"ltr\" : _ref$initialDirection,\n    _ref$detectDirection = _ref.detectDirection,\n    detectDirection = _ref$detectDirection === void 0 ? true : _ref$detectDirection;\n  var _useState = useState(initialDirection),\n    _useState2 = _slicedToArray(_useState, 2),\n    dir = _useState2[0],\n    setDir = _useState2[1];\n  var setDirection = function setDirection(direction) {\n    setDir(direction);\n    document.documentElement.setAttribute(\"dir\", direction);\n  };\n  var toggleDirection = function toggleDirection() {\n    return setDirection(dir === \"ltr\" ? \"rtl\" : \"ltr\");\n  };\n  useIsomorphicEffect(function () {\n    if (detectDirection) {\n      var direction = document.documentElement.getAttribute(\"dir\");\n      if (direction === \"rtl\" || direction === \"ltr\") {\n        setDirection(direction);\n      }\n    }\n  }, []);\n  return /* @__PURE__ */React.createElement(DirectionContext.Provider, {\n    value: {\n      dir: dir,\n      toggleDirection: toggleDirection,\n      setDirection: setDirection\n    }\n  }, children);\n}\nexport { DirectionContext, DirectionProvider, useDirection };","map":{"version":3,"names":["DirectionContext","createContext","dir","toggleDirection","setDirection","useDirection","useContext","DirectionProvider","_ref","children","_ref$initialDirection","initialDirection","_ref$detectDirection","detectDirection","_useState","useState","_useState2","_slicedToArray","setDir","direction","document","documentElement","setAttribute","useIsomorphicEffect","getAttribute","React","createElement","Provider","value"],"sources":["C:\\Users\\vintd\\Documents\\GitHub\\Reserv\\frontend\\node_modules\\@mantine\\core\\src\\core\\DirectionProvider\\DirectionProvider.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\nimport { useIsomorphicEffect } from '@mantine/hooks';\n\nexport type Direction = 'ltr' | 'rtl';\n\nexport interface DirectionContextValue {\n  dir: Direction;\n  toggleDirection: () => void;\n  setDirection: (dir: Direction) => void;\n}\n\nexport const DirectionContext = createContext<DirectionContextValue>({\n  dir: 'ltr',\n  toggleDirection: () => {},\n  setDirection: () => {},\n});\n\nexport function useDirection() {\n  return useContext(DirectionContext);\n}\n\nexport interface DirectionProviderProps {\n  /** Your application */\n  children: React.ReactNode;\n\n  /** Direction set as a default value, `ltr` by default */\n  initialDirection?: Direction;\n\n  /** Determines whether direction should be updated on mount based on `dir` attribute set on root element (usually html element), `true` by default  */\n  detectDirection?: boolean;\n}\n\nexport function DirectionProvider({\n  children,\n  initialDirection = 'ltr',\n  detectDirection = true,\n}: DirectionProviderProps) {\n  const [dir, setDir] = useState<Direction>(initialDirection);\n\n  const setDirection = (direction: Direction) => {\n    setDir(direction);\n    document.documentElement.setAttribute('dir', direction);\n  };\n\n  const toggleDirection = () => setDirection(dir === 'ltr' ? 'rtl' : 'ltr');\n\n  useIsomorphicEffect(() => {\n    if (detectDirection) {\n      const direction = document.documentElement.getAttribute('dir');\n      if (direction === 'rtl' || direction === 'ltr') {\n        setDirection(direction);\n      }\n    }\n  }, []);\n\n  return (\n    <DirectionContext.Provider value={{ dir, toggleDirection, setDirection }}>\n      {children}\n    </DirectionContext.Provider>\n  );\n}\n"],"mappings":";;;;;AAEY,IAACA,gBAAgB,GAAGC,aAAa,CAAC;EAC5CC,GAAG,EAAE,KAAK;EACVC,eAAe,EAAE,SAAAA,gBAAA,EAAM,CACzB,CAAG;EACDC,YAAY,EAAE,SAAAA,aAAA,EAAM,CACtB;AACA,CAAC;AACM,SAASC,YAAYA,CAAA,EAAG;EAC7B,OAAOC,UAAU,CAACN,gBAAgB,CAAC;AACrC;AACO,SAASO,iBAAiBA,CAAAC,IAAA,EAI9B;EAAA,IAHDC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAAC,qBAAA,GAAAF,IAAA,CACRG,gBAAgB;IAAhBA,gBAAgB,GAAAD,qBAAA,cAAG,KAAK,GAAAA,qBAAA;IAAAE,oBAAA,GAAAJ,IAAA,CACxBK,eAAe;IAAfA,eAAe,GAAAD,oBAAA,cAAG,IAAI,GAAAA,oBAAA;EAEtB,IAAAE,SAAA,GAAsBC,QAAQ,CAACJ,gBAAgB,CAAC;IAAAK,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAAzCZ,GAAG,GAAAc,UAAA;IAAEE,MAAM,GAAAF,UAAA;EAClB,IAAMZ,YAAY,GAAG,SAAfA,YAAYA,CAAIe,SAAS,EAAK;IAClCD,MAAM,CAACC,SAAS,CAAC;IACjBC,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,KAAK,EAAEH,SAAS,CAAC;EAC3D,CAAG;EACD,IAAMhB,eAAe,GAAG,SAAlBA,eAAeA,CAAA;IAAA,OAASC,YAAY,CAACF,GAAG,KAAK,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC;EAAA;EACzEqB,mBAAmB,CAAC,YAAM;IACxB,IAAIV,eAAe,EAAE;MACnB,IAAMM,SAAS,GAAGC,QAAQ,CAACC,eAAe,CAACG,YAAY,CAAC,KAAK,CAAC;MAC9D,IAAIL,SAAS,KAAK,KAAK,IAAIA,SAAS,KAAK,KAAK,EAAE;QAC9Cf,YAAY,CAACe,SAAS,CAAC;MAC/B;IACA;EACA,CAAG,EAAE,EAAE,CAAC;EACN,sBAAuBM,KAAK,CAACC,aAAa,CAAC1B,gBAAgB,CAAC2B,QAAQ,EAAE;IAAEC,KAAK,EAAE;MAAE1B,GAAG,EAAHA,GAAG;MAAEC,eAAe,EAAfA,eAAe;MAAEC,YAAY,EAAZA;IAAY;EAAE,CAAE,EAAEK,QAAQ,CAAC;AACpI"},"metadata":{},"sourceType":"module","externalDependencies":[]}