{"ast":null,"code":"'use client';\n\nimport dayjs from 'dayjs';\nimport { getTimezoneOffset } from './get-timezone-offset.mjs';\nconst updateTimezone = (date, timezone, direction) => {\n  if (!date) {\n    return null;\n  }\n  if (!timezone) {\n    return date;\n  }\n  let offset = getTimezoneOffset(date, timezone);\n  if (direction === \"remove\") {\n    offset *= -1;\n  }\n  return dayjs(date).add(offset, \"minutes\").toDate();\n};\nfunction shiftTimezone(direction, date, timezone, disabled) {\n  if (disabled || !date) {\n    return date;\n  }\n  if (Array.isArray(date)) {\n    return date.map(d => updateTimezone(d, timezone, direction));\n  }\n  return updateTimezone(date, timezone, direction);\n}\nexport { shiftTimezone };","map":{"version":3,"names":["updateTimezone","date","timezone","direction","offset","getTimezoneOffset","dayjs","add","toDate","shiftTimezone","disabled","Array","isArray","map","d"],"sources":["C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\node_modules\\@mantine\\dates\\src\\utils\\shift-timezone.ts"],"sourcesContent":["import dayjs from 'dayjs';\nimport { getTimezoneOffset } from './get-timezone-offset';\nimport { DatesRangeValue, DateValue } from '../types';\n\ntype TimeShiftDirection = 'add' | 'remove';\n\nconst updateTimezone = (\n  date: DateValue | undefined,\n  timezone?: string,\n  direction?: TimeShiftDirection\n): DateValue => {\n  if (!date) {\n    return null;\n  }\n  if (!timezone) {\n    return date;\n  }\n  let offset = getTimezoneOffset(date, timezone);\n  if (direction === 'remove') {\n    offset *= -1;\n  }\n  return dayjs(date).add(offset, 'minutes').toDate();\n};\n\nexport function shiftTimezone<T extends DateValue | Date[] | DatesRangeValue | undefined>(\n  direction: TimeShiftDirection,\n  date: T,\n  timezone?: string,\n  disabled?: boolean\n): T {\n  if (disabled || !date) {\n    return date;\n  }\n  if (Array.isArray(date)) {\n    return date.map((d) => updateTimezone(d, timezone, direction)) as T;\n  }\n  return updateTimezone(date, timezone, direction) as T;\n}\n"],"mappings":";;;;AAEA,MAAMA,cAAc,GAAGA,CAACC,IAAI,EAAEC,QAAQ,EAAEC,SAAS,KAAK;EACpD,IAAI,CAACF,IAAI,EAAE;IACT,OAAO,IAAI;EACf;EACE,IAAI,CAACC,QAAQ,EAAE;IACb,OAAOD,IAAI;EACf;EACE,IAAIG,MAAM,GAAGC,iBAAiB,CAACJ,IAAI,EAAEC,QAAQ,CAAC;EAC9C,IAAIC,SAAS,KAAK,QAAQ,EAAE;IAC1BC,MAAM,IAAI,CAAC,CAAC;EAChB;EACE,OAAOE,KAAK,CAACL,IAAI,CAAC,CAACM,GAAG,CAACH,MAAM,EAAE,SAAS,CAAC,CAACI,MAAM,EAAE;AACpD,CAAC;AACM,SAASC,aAAaA,CAACN,SAAS,EAAEF,IAAI,EAAEC,QAAQ,EAAEQ,QAAQ,EAAE;EACjE,IAAIA,QAAQ,IAAI,CAACT,IAAI,EAAE;IACrB,OAAOA,IAAI;EACf;EACE,IAAIU,KAAK,CAACC,OAAO,CAACX,IAAI,CAAC,EAAE;IACvB,OAAOA,IAAI,CAACY,GAAG,CAAEC,CAAC,IAAKd,cAAc,CAACc,CAAC,EAAEZ,QAAQ,EAAEC,SAAS,CAAC,CAAC;EAClE;EACE,OAAOH,cAAc,CAACC,IAAI,EAAEC,QAAQ,EAAEC,SAAS,CAAC;AAClD"},"metadata":{},"sourceType":"module","externalDependencies":[]}