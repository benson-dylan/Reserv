{"ast":null,"code":"'use client';\n\nimport { useDisclosure } from '@mantine/hooks';\nimport { useUncontrolledDates } from '../use-uncontrolled-dates/use-uncontrolled-dates.mjs';\nimport { useDatesContext } from '../../components/DatesProvider/use-dates-context.mjs';\nimport { getFormattedDate } from '../../utils/get-formatted-date.mjs';\nfunction useDatesInput({\n  type,\n  value,\n  defaultValue,\n  onChange,\n  locale,\n  format,\n  closeOnChange,\n  sortDates,\n  labelSeparator\n}) {\n  const ctx = useDatesContext();\n  const [dropdownOpened, dropdownHandlers] = useDisclosure(false);\n  const [_value, _setValue] = useUncontrolledDates({\n    type,\n    value,\n    defaultValue,\n    onChange\n  });\n  const formattedValue = getFormattedDate({\n    type,\n    date: _value,\n    locale: ctx.getLocale(locale),\n    format,\n    labelSeparator: ctx.getLabelSeparator(labelSeparator)\n  });\n  const setValue = val => {\n    if (closeOnChange) {\n      if (type === \"default\") {\n        dropdownHandlers.close();\n      }\n      if (type === \"range\" && val[0] && val[1]) {\n        dropdownHandlers.close();\n      }\n    }\n    if (sortDates && type === \"multiple\") {\n      _setValue([...val].sort((a, b) => a.getTime() - b.getTime()));\n    } else {\n      _setValue(val);\n    }\n  };\n  const onClear = () => setValue(type === \"range\" ? [null, null] : type === \"multiple\" ? [] : null);\n  const shouldClear = type === \"range\" ? !!_value[0] : type === \"multiple\" ? _value.length > 0 : _value !== null;\n  return {\n    _value,\n    setValue,\n    onClear,\n    shouldClear,\n    formattedValue,\n    dropdownOpened,\n    dropdownHandlers\n  };\n}\nexport { useDatesInput };","map":{"version":3,"names":["useDatesInput","type","value","defaultValue","onChange","locale","format","closeOnChange","sortDates","labelSeparator","ctx","useDatesContext","dropdownOpened","dropdownHandlers","useDisclosure","_value","_setValue","useUncontrolledDates","formattedValue","getFormattedDate","date","getLocale","getLabelSeparator","setValue","val","close","sort","a","b","getTime","onClear","shouldClear","length"],"sources":["C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\node_modules\\@mantine\\dates\\src\\hooks\\use-dates-input\\use-dates-input.ts"],"sourcesContent":["import { useDisclosure } from '@mantine/hooks';\nimport { DatePickerType, DatePickerValue } from '../../types';\nimport { useDatesContext } from '../../components/DatesProvider';\nimport { useUncontrolledDates } from '../use-uncontrolled-dates/use-uncontrolled-dates';\nimport { getFormattedDate } from '../../utils';\n\ninterface UseDatesInput<Type extends DatePickerType = 'default'> {\n  type: Type;\n  value: DatePickerValue<Type> | undefined;\n  defaultValue: DatePickerValue<Type> | undefined;\n  onChange: ((value: DatePickerValue<Type>) => void) | undefined;\n  locale: string | undefined;\n  format: string | undefined;\n  closeOnChange: boolean | undefined;\n  sortDates: boolean | undefined;\n  labelSeparator: string | undefined;\n}\n\nexport function useDatesInput<Type extends DatePickerType = 'default'>({\n  type,\n  value,\n  defaultValue,\n  onChange,\n  locale,\n  format,\n  closeOnChange,\n  sortDates,\n  labelSeparator,\n}: UseDatesInput<Type>) {\n  const ctx = useDatesContext();\n\n  const [dropdownOpened, dropdownHandlers] = useDisclosure(false);\n\n  const [_value, _setValue] = useUncontrolledDates({\n    type,\n    value,\n    defaultValue,\n    onChange,\n  });\n\n  const formattedValue = getFormattedDate({\n    type,\n    date: _value,\n    locale: ctx.getLocale(locale),\n    format: format!,\n    labelSeparator: ctx.getLabelSeparator(labelSeparator),\n  });\n\n  const setValue = (val: any) => {\n    if (closeOnChange) {\n      if (type === 'default') {\n        dropdownHandlers.close();\n      }\n\n      if (type === 'range' && val[0] && val[1]) {\n        dropdownHandlers.close();\n      }\n    }\n\n    if (sortDates && type === 'multiple') {\n      _setValue([...val].sort((a, b) => a.getTime() - b.getTime()));\n    } else {\n      _setValue(val);\n    }\n  };\n\n  const onClear = () => setValue(type === 'range' ? [null, null] : type === 'multiple' ? [] : null);\n  const shouldClear =\n    type === 'range' ? !!_value[0] : type === 'multiple' ? _value.length > 0 : _value !== null;\n\n  return {\n    _value,\n    setValue,\n    onClear,\n    shouldClear,\n    formattedValue,\n    dropdownOpened,\n    dropdownHandlers,\n  };\n}\n"],"mappings":";;;;;;AAIO,SAASA,aAAaA,CAAC;EAC5BC,IAAI;EACJC,KAAK;EACLC,YAAY;EACZC,QAAQ;EACRC,MAAM;EACNC,MAAM;EACNC,aAAa;EACbC,SAAS;EACTC;AACF,CAAC,EAAE;EACD,MAAMC,GAAG,GAAGC,eAAe,EAAE;EAC7B,MAAM,CAACC,cAAc,EAAEC,gBAAgB,CAAC,GAAGC,aAAa,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGC,oBAAoB,CAAC;IAC/ChB,IAAI;IACJC,KAAK;IACLC,YAAY;IACZC;EACJ,CAAG,CAAC;EACF,MAAMc,cAAc,GAAGC,gBAAgB,CAAC;IACtClB,IAAI;IACJmB,IAAI,EAAEL,MAAM;IACZV,MAAM,EAAEK,GAAG,CAACW,SAAS,CAAChB,MAAM,CAAC;IAC7BC,MAAM;IACNG,cAAc,EAAEC,GAAG,CAACY,iBAAiB,CAACb,cAAc;EACxD,CAAG,CAAC;EACF,MAAMc,QAAQ,GAAIC,GAAG,IAAK;IACxB,IAAIjB,aAAa,EAAE;MACjB,IAAIN,IAAI,KAAK,SAAS,EAAE;QACtBY,gBAAgB,CAACY,KAAK,EAAE;MAChC;MACM,IAAIxB,IAAI,KAAK,OAAO,IAAIuB,GAAG,CAAC,CAAC,CAAC,IAAIA,GAAG,CAAC,CAAC,CAAC,EAAE;QACxCX,gBAAgB,CAACY,KAAK,EAAE;MAChC;IACA;IACI,IAAIjB,SAAS,IAAIP,IAAI,KAAK,UAAU,EAAE;MACpCe,SAAS,CAAC,CAAC,GAAGQ,GAAG,CAAC,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,OAAO,EAAE,GAAGD,CAAC,CAACC,OAAO,EAAE,CAAC,CAAC;IACnE,CAAK,MAAM;MACLb,SAAS,CAACQ,GAAG,CAAC;IACpB;EACA,CAAG;EACD,MAAMM,OAAO,GAAGA,CAAA,KAAMP,QAAQ,CAACtB,IAAI,KAAK,OAAO,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,GAAGA,IAAI,KAAK,UAAU,GAAG,EAAE,GAAG,IAAI,CAAC;EACjG,MAAM8B,WAAW,GAAG9B,IAAI,KAAK,OAAO,GAAG,CAAC,CAACc,MAAM,CAAC,CAAC,CAAC,GAAGd,IAAI,KAAK,UAAU,GAAGc,MAAM,CAACiB,MAAM,GAAG,CAAC,GAAGjB,MAAM,KAAK,IAAI;EAC9G,OAAO;IACLA,MAAM;IACNQ,QAAQ;IACRO,OAAO;IACPC,WAAW;IACXb,cAAc;IACdN,cAAc;IACdC;EACJ,CAAG;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}