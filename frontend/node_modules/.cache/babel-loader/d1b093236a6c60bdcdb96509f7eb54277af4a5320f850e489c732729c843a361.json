{"ast":null,"code":"'use client';\n\nimport { isMantineColorScheme } from './is-mantine-color-scheme.mjs';\nfunction localStorageColorSchemeManager() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n    _ref$key = _ref.key,\n    key = _ref$key === void 0 ? \"mantine-color-scheme-value\" : _ref$key;\n  var handleStorageEvent;\n  return {\n    get: function get(defaultValue) {\n      if (typeof window === \"undefined\") {\n        return defaultValue;\n      }\n      try {\n        var storedColorScheme = window.localStorage.getItem(key);\n        return isMantineColorScheme(storedColorScheme) ? storedColorScheme : defaultValue;\n      } catch (e) {\n        return defaultValue;\n      }\n    },\n    set: function set(value) {\n      try {\n        window.localStorage.setItem(key, value);\n      } catch (error) {\n        console.warn(\"[@mantine/core] Local storage color scheme manager was unable to save color scheme.\", error);\n      }\n    },\n    subscribe: function subscribe(onUpdate) {\n      handleStorageEvent = function handleStorageEvent(event) {\n        if (event.storageArea === window.localStorage && event.key === key) {\n          isMantineColorScheme(event.newValue) && onUpdate(event.newValue);\n        }\n      };\n      window.addEventListener(\"storage\", handleStorageEvent);\n    },\n    unsubscribe: function unsubscribe() {\n      window.removeEventListener(\"storage\", handleStorageEvent);\n    },\n    clear: function clear() {\n      window.localStorage.removeItem(key);\n    }\n  };\n}\nexport { localStorageColorSchemeManager };","map":{"version":3,"names":["localStorageColorSchemeManager","_ref","arguments","length","undefined","_ref$key","key","handleStorageEvent","get","defaultValue","window","storedColorScheme","localStorage","getItem","isMantineColorScheme","e","set","value","setItem","error","console","warn","subscribe","onUpdate","event","storageArea","newValue","addEventListener","unsubscribe","removeEventListener","clear","removeItem"],"sources":["C:\\Users\\vintd\\Documents\\GitHub\\Reserv\\frontend\\node_modules\\@mantine\\core\\src\\core\\MantineProvider\\color-scheme-managers\\local-storage-manager.ts"],"sourcesContent":["import type { MantineColorSchemeManager } from './types';\nimport { isMantineColorScheme } from './is-mantine-color-scheme';\n\nexport interface LocalStorageColorSchemeManagerOptions {\n  /** Local storage key used to retrieve value with `localStorage.getItem(key)`, `mantine-color-scheme-value` by default */\n  key?: string;\n}\n\nexport function localStorageColorSchemeManager({\n  key = 'mantine-color-scheme-value',\n}: LocalStorageColorSchemeManagerOptions = {}): MantineColorSchemeManager {\n  let handleStorageEvent: (event: StorageEvent) => void;\n\n  return {\n    get: (defaultValue) => {\n      if (typeof window === 'undefined') {\n        return defaultValue;\n      }\n\n      try {\n        const storedColorScheme = window.localStorage.getItem(key);\n        return isMantineColorScheme(storedColorScheme) ? storedColorScheme : defaultValue;\n      } catch {\n        return defaultValue;\n      }\n    },\n\n    set: (value) => {\n      try {\n        window.localStorage.setItem(key, value);\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          '[@mantine/core] Local storage color scheme manager was unable to save color scheme.',\n          error\n        );\n      }\n    },\n\n    subscribe: (onUpdate) => {\n      handleStorageEvent = (event) => {\n        if (event.storageArea === window.localStorage && event.key === key) {\n          isMantineColorScheme(event.newValue) && onUpdate(event.newValue);\n        }\n      };\n\n      window.addEventListener('storage', handleStorageEvent);\n    },\n\n    unsubscribe: () => {\n      window.removeEventListener('storage', handleStorageEvent);\n    },\n\n    clear: () => {\n      window.localStorage.removeItem(key);\n    },\n  };\n}\n"],"mappings":";;;AACO,SAASA,8BAA8BA,CAAA,EAEtC;EAAA,IAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAJ,EAAE;IAAAG,QAAA,GAAAJ,IAAA,CADJK,GAAG;IAAHA,GAAG,GAAAD,QAAA,cAAG,4BAA4B,GAAAA,QAAA;EAElC,IAAIE,kBAAkB;EACtB,OAAO;IACLC,GAAG,EAAE,SAAAA,IAACC,YAAY,EAAK;MACrB,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;QACjC,OAAOD,YAAY;MAC3B;MACM,IAAI;QACF,IAAME,iBAAiB,GAAGD,MAAM,CAACE,YAAY,CAACC,OAAO,CAACP,GAAG,CAAC;QAC1D,OAAOQ,oBAAoB,CAACH,iBAAiB,CAAC,GAAGA,iBAAiB,GAAGF,YAAY;MACzF,CAAO,CAAC,OAAOM,CAAC,EAAE;QACV,OAAON,YAAY;MAC3B;IACA,CAAK;IACDO,GAAG,EAAE,SAAAA,IAACC,KAAK,EAAK;MACd,IAAI;QACFP,MAAM,CAACE,YAAY,CAACM,OAAO,CAACZ,GAAG,EAAEW,KAAK,CAAC;MAC/C,CAAO,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACC,IAAI,CACV,qFAAqF,EACrFF,KACV,CAAS;MACT;IACA,CAAK;IACDG,SAAS,EAAE,SAAAA,UAACC,QAAQ,EAAK;MACvBhB,kBAAkB,GAAG,SAAAA,mBAACiB,KAAK,EAAK;QAC9B,IAAIA,KAAK,CAACC,WAAW,KAAKf,MAAM,CAACE,YAAY,IAAIY,KAAK,CAAClB,GAAG,KAAKA,GAAG,EAAE;UAClEQ,oBAAoB,CAACU,KAAK,CAACE,QAAQ,CAAC,IAAIH,QAAQ,CAACC,KAAK,CAACE,QAAQ,CAAC;QAC1E;MACA,CAAO;MACDhB,MAAM,CAACiB,gBAAgB,CAAC,SAAS,EAAEpB,kBAAkB,CAAC;IAC5D,CAAK;IACDqB,WAAW,EAAE,SAAAA,YAAA,EAAM;MACjBlB,MAAM,CAACmB,mBAAmB,CAAC,SAAS,EAAEtB,kBAAkB,CAAC;IAC/D,CAAK;IACDuB,KAAK,EAAE,SAAAA,MAAA,EAAM;MACXpB,MAAM,CAACE,YAAY,CAACmB,UAAU,CAACzB,GAAG,CAAC;IACzC;EACA,CAAG;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}