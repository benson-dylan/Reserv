{"ast":null,"code":"'use client';\n\nimport React, { createContext, useContext, useMemo } from 'react';\nimport { DEFAULT_THEME } from '../default-theme.mjs';\nimport { mergeMantineTheme } from '../merge-mantine-theme/merge-mantine-theme.mjs';\nvar MantineThemeContext = createContext(null);\nvar useSafeMantineTheme = function useSafeMantineTheme() {\n  return useContext(MantineThemeContext) || DEFAULT_THEME;\n};\nfunction useMantineTheme() {\n  var ctx = useContext(MantineThemeContext);\n  if (!ctx) {\n    throw new Error(\"@mantine/core: MantineProvider was not found in component tree, make sure you have it in your app\");\n  }\n  return ctx;\n}\nfunction MantineThemeProvider(_ref) {\n  var theme = _ref.theme,\n    children = _ref.children,\n    _ref$inherit = _ref.inherit,\n    inherit = _ref$inherit === void 0 ? true : _ref$inherit;\n  var parentTheme = useSafeMantineTheme();\n  var mergedTheme = useMemo(function () {\n    return mergeMantineTheme(inherit ? parentTheme : DEFAULT_THEME, theme);\n  }, [theme, parentTheme, inherit]);\n  return /* @__PURE__ */React.createElement(MantineThemeContext.Provider, {\n    value: mergedTheme\n  }, children);\n}\nMantineThemeProvider.displayName = \"@mantine/core/MantineThemeProvider\";\nexport { MantineThemeContext, MantineThemeProvider, useMantineTheme, useSafeMantineTheme };","map":{"version":3,"names":["MantineThemeContext","createContext","useSafeMantineTheme","useContext","DEFAULT_THEME","useMantineTheme","ctx","Error","MantineThemeProvider","_ref","theme","children","_ref$inherit","inherit","parentTheme","mergedTheme","useMemo","mergeMantineTheme","React","createElement","Provider","value","displayName"],"sources":["C:\\Users\\vintd\\Documents\\GitHub\\Reserv\\frontend\\node_modules\\@mantine\\core\\src\\core\\MantineProvider\\MantineThemeProvider\\MantineThemeProvider.tsx"],"sourcesContent":["import React, { createContext, useContext, useMemo } from 'react';\nimport { MantineTheme, MantineThemeOverride } from '../theme.types';\nimport { DEFAULT_THEME } from '../default-theme';\nimport { mergeMantineTheme } from '../merge-mantine-theme';\n\nexport const MantineThemeContext = createContext<MantineTheme | null>(null);\n\nexport const useSafeMantineTheme = () => useContext(MantineThemeContext) || DEFAULT_THEME;\n\nexport function useMantineTheme() {\n  const ctx = useContext(MantineThemeContext);\n  if (!ctx) {\n    throw new Error(\n      '@mantine/core: MantineProvider was not found in component tree, make sure you have it in your app'\n    );\n  }\n\n  return ctx;\n}\n\nexport interface MantineThemeProviderProps {\n  /** Determines whether theme should be inherited from parent MantineProvider, `true` by default */\n  inherit?: boolean;\n\n  /** Theme override object */\n  theme?: MantineThemeOverride;\n\n  /** Your application or part of the application that requires different theme */\n  children: React.ReactNode;\n}\n\nexport function MantineThemeProvider({\n  theme,\n  children,\n  inherit = true,\n}: MantineThemeProviderProps) {\n  const parentTheme = useSafeMantineTheme();\n  const mergedTheme = useMemo(\n    () => mergeMantineTheme(inherit ? parentTheme : DEFAULT_THEME, theme),\n    [theme, parentTheme, inherit]\n  );\n\n  return (\n    <MantineThemeContext.Provider value={mergedTheme}>{children}</MantineThemeContext.Provider>\n  );\n}\n\nMantineThemeProvider.displayName = '@mantine/core/MantineThemeProvider';\n"],"mappings":";;;;;AAGY,IAACA,mBAAmB,GAAGC,aAAa,CAAC,IAAI;AACzC,IAACC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA;EAAA,OAASC,UAAU,CAACH,mBAAmB,CAAC,IAAII,aAAA;AAAA;AACrE,SAASC,eAAeA,CAAA,EAAG;EAChC,IAAMC,GAAG,GAAGH,UAAU,CAACH,mBAAmB,CAAC;EAC3C,IAAI,CAACM,GAAG,EAAE;IACR,MAAM,IAAIC,KAAK,CACb,mGACN,CAAK;EACL;EACE,OAAOD,GAAG;AACZ;AACO,SAASE,oBAAoBA,CAAAC,IAAA,EAIjC;EAAA,IAHDC,KAAK,GAAAD,IAAA,CAALC,KAAK;IACLC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;IAAAC,YAAA,GAAAH,IAAA,CACRI,OAAO;IAAPA,OAAO,GAAAD,YAAA,cAAG,IAAI,GAAAA,YAAA;EAEd,IAAME,WAAW,GAAGZ,mBAAmB,EAAE;EACzC,IAAMa,WAAW,GAAGC,OAAO,CACzB;IAAA,OAAMC,iBAAiB,CAACJ,OAAO,GAAGC,WAAW,GAAGV,aAAa,EAAEM,KAAK,CAAC;EAAA,GACrE,CAACA,KAAK,EAAEI,WAAW,EAAED,OAAO,CAChC,CAAG;EACD,sBAAuBK,KAAK,CAACC,aAAa,CAACnB,mBAAmB,CAACoB,QAAQ,EAAE;IAAEC,KAAK,EAAEN;EAAW,CAAE,EAAEJ,QAAQ,CAAC;AAC5G;AACAH,oBAAoB,CAACc,WAAW,GAAG,oCAAoC"},"metadata":{},"sourceType":"module","externalDependencies":[]}