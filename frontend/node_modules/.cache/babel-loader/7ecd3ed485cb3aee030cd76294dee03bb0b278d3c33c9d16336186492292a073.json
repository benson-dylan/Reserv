{"ast":null,"code":"'use client';\n\nimport _toConsumableArray from \"C:/Users/vintd/Documents/GitHub/Reserv/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nfunction splitTags(splitChars, value) {\n  if (!splitChars) return [value];\n  return value.split(new RegExp(\"[\".concat(splitChars.join(\"\"), \"]\"))).map(function (tag) {\n    return tag.trim();\n  }).filter(function (tag) {\n    return tag !== \"\";\n  });\n}\nfunction getSplittedTags(_ref) {\n  var splitChars = _ref.splitChars,\n    allowDuplicates = _ref.allowDuplicates,\n    maxTags = _ref.maxTags,\n    value = _ref.value,\n    currentTags = _ref.currentTags;\n  var splitted = splitTags(splitChars, value);\n  var merged = allowDuplicates ? [].concat(_toConsumableArray(currentTags), _toConsumableArray(splitted)) : _toConsumableArray( /* @__PURE__ */new Set([].concat(_toConsumableArray(currentTags), _toConsumableArray(splitted))));\n  return maxTags ? merged.slice(0, maxTags) : merged;\n}\nexport { getSplittedTags };","map":{"version":3,"names":["splitTags","splitChars","value","split","RegExp","concat","join","map","tag","trim","filter","getSplittedTags","_ref","allowDuplicates","maxTags","currentTags","splitted","merged","_toConsumableArray","Set","slice"],"sources":["C:\\Users\\vintd\\Documents\\GitHub\\Reserv\\frontend\\node_modules\\@mantine\\core\\src\\components\\TagsInput\\get-splitted-tags.ts"],"sourcesContent":["function splitTags(splitChars: string[] | undefined, value: string) {\n  if (!splitChars) return [value];\n\n  return value\n    .split(new RegExp(`[${splitChars.join('')}]`))\n    .map((tag) => tag.trim())\n    .filter((tag) => tag !== '');\n}\n\ninterface GetSplittedTagsInput {\n  splitChars: string[] | undefined;\n  allowDuplicates: boolean | undefined;\n  maxTags: number | undefined;\n  value: string;\n  currentTags: string[];\n}\n\nexport function getSplittedTags({\n  splitChars,\n  allowDuplicates,\n  maxTags,\n  value,\n  currentTags,\n}: GetSplittedTagsInput) {\n  const splitted = splitTags(splitChars, value);\n  const merged = allowDuplicates\n    ? [...currentTags, ...splitted]\n    : [...new Set([...currentTags, ...splitted])];\n\n  return maxTags ? merged.slice(0, maxTags) : merged;\n}\n"],"mappings":";;;AAAA,SAASA,SAASA,CAACC,UAAU,EAAEC,KAAK,EAAE;EACpC,IAAI,CAACD,UAAU,EACb,OAAO,CAACC,KAAK,CAAC;EAChB,OAAOA,KAAK,CAACC,KAAK,CAAC,IAAIC,MAAM,KAAAC,MAAA,CAAKJ,UAAU,CAACK,IAAI,CAAC,EAAE,CAAC,MAAG,CAAC,CAAC,CAACC,GAAG,CAAC,UAACC,GAAG;IAAA,OAAKA,GAAG,CAACC,IAAI,EAAE;EAAA,EAAC,CAACC,MAAM,CAAC,UAACF,GAAG;IAAA,OAAKA,GAAG,KAAK,EAAE;EAAA,EAAC;AACjH;AACO,SAASG,eAAeA,CAAAC,IAAA,EAM5B;EAAA,IALDX,UAAU,GAAAW,IAAA,CAAVX,UAAU;IACVY,eAAe,GAAAD,IAAA,CAAfC,eAAe;IACfC,OAAO,GAAAF,IAAA,CAAPE,OAAO;IACPZ,KAAK,GAAAU,IAAA,CAALV,KAAK;IACLa,WAAW,GAAAH,IAAA,CAAXG,WAAW;EAEX,IAAMC,QAAQ,GAAGhB,SAAS,CAACC,UAAU,EAAEC,KAAK,CAAC;EAC7C,IAAMe,MAAM,GAAGJ,eAAe,MAAAR,MAAA,CAAAa,kBAAA,CAAOH,WAAW,GAAAG,kBAAA,CAAKF,QAAQ,KAAAE,kBAAA,EAAK,eAAmB,IAAIC,GAAG,IAAAd,MAAA,CAAAa,kBAAA,CAAKH,WAAW,GAAAG,kBAAA,CAAKF,QAAQ,EAAC,CAAC,CAAC;EAC5H,OAAOF,OAAO,GAAGG,MAAM,CAACG,KAAK,CAAC,CAAC,EAAEN,OAAO,CAAC,GAAGG,MAAM;AACpD"},"metadata":{},"sourceType":"module","externalDependencies":[]}