{"ast":null,"code":"'use client';\n\nimport dayjs from 'dayjs';\nimport { shiftTimezone } from './shift-timezone.mjs';\nfunction getDefaultClampedDate({\n  minDate,\n  maxDate,\n  timezone\n}) {\n  const today = shiftTimezone(\"add\", /* @__PURE__ */new Date(), timezone);\n  if (!minDate && !maxDate) {\n    return today;\n  }\n  if (minDate && dayjs(today).isBefore(minDate)) {\n    return minDate;\n  }\n  if (maxDate && dayjs(today).isAfter(maxDate)) {\n    return maxDate;\n  }\n  return today;\n}\nexport { getDefaultClampedDate };","map":{"version":3,"names":["getDefaultClampedDate","minDate","maxDate","timezone","today","shiftTimezone","Date","dayjs","isBefore","isAfter"],"sources":["C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\node_modules\\@mantine\\dates\\src\\utils\\get-default-clamped-date.ts"],"sourcesContent":["import dayjs from 'dayjs';\nimport { shiftTimezone } from './shift-timezone';\n\ninterface GetDefaultClampedDate {\n  minDate: Date | undefined;\n  maxDate: Date | undefined;\n  timezone?: string;\n}\n\nexport function getDefaultClampedDate({ minDate, maxDate, timezone }: GetDefaultClampedDate) {\n  const today = shiftTimezone('add', new Date(), timezone);\n\n  if (!minDate && !maxDate) {\n    return today;\n  }\n\n  if (minDate && dayjs(today).isBefore(minDate)) {\n    return minDate;\n  }\n\n  if (maxDate && dayjs(today).isAfter(maxDate)) {\n    return maxDate;\n  }\n\n  return today;\n}\n"],"mappings":";;;;AAEO,SAASA,qBAAqBA,CAAC;EAAEC,OAAO;EAAEC,OAAO;EAAEC;AAAQ,CAAE,EAAE;EACpE,MAAMC,KAAK,GAAGC,aAAa,CAAC,KAAK,iBAAkB,IAAIC,IAAI,EAAE,EAAEH,QAAQ,CAAC;EACxE,IAAI,CAACF,OAAO,IAAI,CAACC,OAAO,EAAE;IACxB,OAAOE,KAAK;EAChB;EACE,IAAIH,OAAO,IAAIM,KAAK,CAACH,KAAK,CAAC,CAACI,QAAQ,CAACP,OAAO,CAAC,EAAE;IAC7C,OAAOA,OAAO;EAClB;EACE,IAAIC,OAAO,IAAIK,KAAK,CAACH,KAAK,CAAC,CAACK,OAAO,CAACP,OAAO,CAAC,EAAE;IAC5C,OAAOA,OAAO;EAClB;EACE,OAAOE,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}