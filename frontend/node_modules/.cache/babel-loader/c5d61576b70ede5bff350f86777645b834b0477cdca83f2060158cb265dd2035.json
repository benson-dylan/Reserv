{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport cx from 'clsx';\nimport { useMantineColorScheme, useComputedColorScheme } from '@mantine/core';\nimport { IconSun, IconMoon } from '@tabler/icons-react';\nimport { HeaderControl } from './HeaderControl.mjs';\nimport classes from './ColorSchemeControl.module.mjs';\nfunction ColorSchemeControl() {\n  const {\n    setColorScheme\n  } = useMantineColorScheme();\n  const computedColorScheme = useComputedColorScheme(\"light\", {\n    getInitialValueInEffect: true\n  });\n  return /* @__PURE__ */React.createElement(HeaderControl, {\n    onClick: () => setColorScheme(computedColorScheme === \"light\" ? \"dark\" : \"light\"),\n    tooltip: `${computedColorScheme === \"dark\" ? \"Light\" : \"Dark\"} mode`\n  }, /* @__PURE__ */React.createElement(IconSun, {\n    className: cx(classes.icon, classes.light),\n    stroke: 1.5\n  }), /* @__PURE__ */React.createElement(IconMoon, {\n    className: cx(classes.icon, classes.dark),\n    stroke: 1.5\n  }));\n}\nexport { ColorSchemeControl };","map":{"version":3,"names":["ColorSchemeControl","setColorScheme","useMantineColorScheme","computedColorScheme","useComputedColorScheme","getInitialValueInEffect","React","createElement","HeaderControl","onClick","tooltip","IconSun","className","cx","classes","icon","light","stroke","IconMoon","dark"],"sources":["C:\\Users\\vintd\\Documents\\GitHub\\Reserv\\frontend\\node_modules\\@mantine\\ds\\src\\HeaderControl\\ColorSchemeControl.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'clsx';\nimport { useMantineColorScheme, useComputedColorScheme } from '@mantine/core';\nimport { IconSun, IconMoon } from '@tabler/icons-react';\nimport { HeaderControl } from './HeaderControl';\nimport classes from './ColorSchemeControl.module.css';\n\nexport function ColorSchemeControl() {\n  const { setColorScheme } = useMantineColorScheme();\n  const computedColorScheme = useComputedColorScheme('light', { getInitialValueInEffect: true });\n\n  return (\n    <HeaderControl\n      onClick={() => setColorScheme(computedColorScheme === 'light' ? 'dark' : 'light')}\n      tooltip={`${computedColorScheme === 'dark' ? 'Light' : 'Dark'} mode`}\n    >\n      <IconSun className={cx(classes.icon, classes.light)} stroke={1.5} />\n      <IconMoon className={cx(classes.icon, classes.dark)} stroke={1.5} />\n    </HeaderControl>\n  );\n}\n"],"mappings":";;;;;;;;AAMO,SAASA,kBAAkBA,CAAA,EAAG;EACnC,MAAM;IAAEC;EAAc,CAAE,GAAGC,qBAAqB,EAAE;EAClD,MAAMC,mBAAmB,GAAGC,sBAAsB,CAAC,OAAO,EAAE;IAAEC,uBAAuB,EAAE;EAAI,CAAE,CAAC;EAC9F,sBAAuBC,KAAK,CAACC,aAAa,CACxCC,aAAa,EACb;IACEC,OAAO,EAAEA,CAAA,KAAMR,cAAc,CAACE,mBAAmB,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;IACjFO,OAAO,EAAG,GAAEP,mBAAmB,KAAK,MAAM,GAAG,OAAO,GAAG,MAAO;EACpE,CAAK,EACL,eAAoBG,KAAK,CAACC,aAAa,CAACI,OAAO,EAAE;IAAEC,SAAS,EAAEC,EAAE,CAACC,OAAO,CAACC,IAAI,EAAED,OAAO,CAACE,KAAK,CAAC;IAAEC,MAAM,EAAE;EAAG,CAAE,CAAC,EAC7G,eAAoBX,KAAK,CAACC,aAAa,CAACW,QAAQ,EAAE;IAAEN,SAAS,EAAEC,EAAE,CAACC,OAAO,CAACC,IAAI,EAAED,OAAO,CAACK,IAAI,CAAC;IAAEF,MAAM,EAAE;EAAG,CAAE,CAC5G,CAAG;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}