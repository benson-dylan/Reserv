{"ast":null,"code":"'use client';\n\nimport _slicedToArray from \"C:/Users/vintd/Documents/GitHub/Reserv/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState } from 'react';\nfunction useValidatedState(initialValue, validation, initialValidationState) {\n  var _useState = useState(initialValue),\n    _useState2 = _slicedToArray(_useState, 2),\n    value = _useState2[0],\n    setValue = _useState2[1];\n  var _useState3 = useState(validation(initialValue) ? initialValue : void 0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    lastValidValue = _useState4[0],\n    setLastValidValue = _useState4[1];\n  var _useState5 = useState(typeof initialValidationState === \"boolean\" ? initialValidationState : validation(initialValue)),\n    _useState6 = _slicedToArray(_useState5, 2),\n    valid = _useState6[0],\n    setValid = _useState6[1];\n  var onChange = function onChange(val) {\n    if (validation(val)) {\n      setLastValidValue(val);\n      setValid(true);\n    } else {\n      setValid(false);\n    }\n    setValue(val);\n  };\n  return [{\n    value: value,\n    lastValidValue: lastValidValue,\n    valid: valid\n  }, onChange];\n}\nexport { useValidatedState };","map":{"version":3,"names":["useValidatedState","initialValue","validation","initialValidationState","_useState","useState","_useState2","_slicedToArray","value","setValue","_useState3","_useState4","lastValidValue","setLastValidValue","_useState5","_useState6","valid","setValid","onChange","val"],"sources":["C:\\Users\\vintd\\Documents\\GitHub\\Reserv\\frontend\\node_modules\\@mantine\\hooks\\src\\use-validated-state\\use-validated-state.ts"],"sourcesContent":["import { useState } from 'react';\n\nexport function useValidatedState<T>(\n  initialValue: T,\n  validation: (value: T) => boolean,\n  initialValidationState?: boolean\n) {\n  const [value, setValue] = useState<T>(initialValue);\n  const [lastValidValue, setLastValidValue] = useState<T | undefined>(\n    validation(initialValue) ? initialValue : undefined\n  );\n  const [valid, setValid] = useState<boolean>(\n    typeof initialValidationState === 'boolean' ? initialValidationState : validation(initialValue)\n  );\n\n  const onChange = (val: T) => {\n    if (validation(val)) {\n      setLastValidValue(val);\n      setValid(true);\n    } else {\n      setValid(false);\n    }\n\n    setValue(val);\n  };\n\n  return [{ value, lastValidValue, valid }, onChange] as const;\n}\n"],"mappings":";;;;AACO,SAASA,iBAAiBA,CAACC,YAAY,EAAEC,UAAU,EAAEC,sBAAsB,EAAE;EAClF,IAAAC,SAAA,GAA0BC,QAAQ,CAACJ,YAAY,CAAC;IAAAK,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAAzCI,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAA4CL,QAAQ,CAClDH,UAAU,CAACD,YAAY,CAAC,GAAGA,YAAY,GAAG,KAAK,CACnD,CAAG;IAAAU,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAFME,cAAc,GAAAD,UAAA;IAAEE,iBAAiB,GAAAF,UAAA;EAGxC,IAAAG,UAAA,GAA0BT,QAAQ,CAChC,OAAOF,sBAAsB,KAAK,SAAS,GAAGA,sBAAsB,GAAGD,UAAU,CAACD,YAAY,CAClG,CAAG;IAAAc,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAFME,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EAGtB,IAAMG,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,GAAG,EAAK;IACxB,IAAIjB,UAAU,CAACiB,GAAG,CAAC,EAAE;MACnBN,iBAAiB,CAACM,GAAG,CAAC;MACtBF,QAAQ,CAAC,IAAI,CAAC;IACpB,CAAK,MAAM;MACLA,QAAQ,CAAC,KAAK,CAAC;IACrB;IACIR,QAAQ,CAACU,GAAG,CAAC;EACjB,CAAG;EACD,OAAO,CAAC;IAAEX,KAAK,EAALA,KAAK;IAAEI,cAAc,EAAdA,cAAc;IAAEI,KAAK,EAALA;EAAK,CAAE,EAAEE,QAAQ,CAAC;AACrD"},"metadata":{},"sourceType":"module","externalDependencies":[]}