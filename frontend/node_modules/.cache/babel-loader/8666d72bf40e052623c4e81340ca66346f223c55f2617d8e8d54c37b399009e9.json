{"ast":null,"code":"'use client';\n\nimport _defineProperty from \"C:/Users/vintd/Documents/GitHub/Reserv/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport React from 'react';\nimport cx from 'clsx';\nimport { ScrollArea } from '../../ScrollArea/ScrollArea.mjs';\nimport { Combobox } from '../Combobox.mjs';\nimport { defaultOptionsFilter } from './default-options-filter.mjs';\nimport { isEmptyComboboxData } from './is-empty-combobox-data.mjs';\nimport { isOptionsGroup } from './is-options-group.mjs';\nimport { validateOptions } from './validate-options.mjs';\nimport classes from '../Combobox.module.mjs';\nimport { CheckIcon } from '../../Checkbox/CheckIcon.mjs';\nfunction isValueChecked(value, optionValue) {\n  return Array.isArray(value) ? value.includes(optionValue) : value === optionValue;\n}\nfunction Option(_ref) {\n  var data = _ref.data,\n    withCheckIcon = _ref.withCheckIcon,\n    value = _ref.value,\n    checkIconPosition = _ref.checkIconPosition,\n    unstyled = _ref.unstyled;\n  if (!isOptionsGroup(data)) {\n    var check = withCheckIcon && isValueChecked(value, data.value) && /* @__PURE__ */React.createElement(CheckIcon, {\n      className: classes.optionsDropdownCheckIcon\n    });\n    return /* @__PURE__ */React.createElement(Combobox.Option, {\n      value: data.value,\n      disabled: data.disabled,\n      className: cx(_defineProperty({}, classes.optionsDropdownOption, !unstyled)),\n      \"data-reverse\": checkIconPosition === \"right\" || void 0,\n      \"data-checked\": isValueChecked(value, data.value) || void 0,\n      \"aria-selected\": isValueChecked(value, data.value)\n    }, checkIconPosition === \"left\" && check, data.label, checkIconPosition === \"right\" && check);\n  }\n  var options = data.items.map(function (item) {\n    return /* @__PURE__ */React.createElement(Option, {\n      data: item,\n      value: value,\n      key: item.value,\n      unstyled: unstyled,\n      withCheckIcon: withCheckIcon,\n      checkIconPosition: checkIconPosition\n    });\n  });\n  return /* @__PURE__ */React.createElement(Combobox.Group, {\n    label: data.group\n  }, options);\n}\nfunction OptionsDropdown(_ref2) {\n  var data = _ref2.data,\n    hidden = _ref2.hidden,\n    hiddenWhenEmpty = _ref2.hiddenWhenEmpty,\n    filter = _ref2.filter,\n    search = _ref2.search,\n    limit = _ref2.limit,\n    maxDropdownHeight = _ref2.maxDropdownHeight,\n    _ref2$withScrollArea = _ref2.withScrollArea,\n    withScrollArea = _ref2$withScrollArea === void 0 ? true : _ref2$withScrollArea,\n    _ref2$filterOptions = _ref2.filterOptions,\n    filterOptions = _ref2$filterOptions === void 0 ? true : _ref2$filterOptions,\n    _ref2$withCheckIcon = _ref2.withCheckIcon,\n    withCheckIcon = _ref2$withCheckIcon === void 0 ? false : _ref2$withCheckIcon,\n    value = _ref2.value,\n    checkIconPosition = _ref2.checkIconPosition,\n    nothingFoundMessage = _ref2.nothingFoundMessage,\n    unstyled = _ref2.unstyled,\n    labelId = _ref2.labelId;\n  validateOptions(data);\n  var shouldFilter = typeof search === \"string\";\n  var filteredData = shouldFilter ? (filter || defaultOptionsFilter)({\n    options: data,\n    search: filterOptions ? search : \"\",\n    limit: limit != null ? limit : Infinity\n  }) : data;\n  var isEmpty = isEmptyComboboxData(filteredData);\n  var options = filteredData.map(function (item) {\n    return /* @__PURE__ */React.createElement(Option, {\n      data: item,\n      key: isOptionsGroup(item) ? item.group : item.value,\n      withCheckIcon: withCheckIcon,\n      value: value,\n      checkIconPosition: checkIconPosition,\n      unstyled: unstyled\n    });\n  });\n  return /* @__PURE__ */React.createElement(Combobox.Dropdown, {\n    hidden: hidden || hiddenWhenEmpty && isEmpty\n  }, /* @__PURE__ */React.createElement(Combobox.Options, {\n    labelledBy: labelId\n  }, withScrollArea ? /* @__PURE__ */React.createElement(ScrollArea.Autosize, {\n    mah: maxDropdownHeight != null ? maxDropdownHeight : 220,\n    type: \"scroll\",\n    scrollbarSize: \"var(--_combobox-padding)\",\n    offsetScrollbars: \"y\",\n    className: classes.optionsDropdownScrollArea\n  }, options) : options, isEmpty && nothingFoundMessage && /* @__PURE__ */React.createElement(Combobox.Empty, null, nothingFoundMessage)));\n}\nexport { OptionsDropdown };","map":{"version":3,"names":["isValueChecked","value","optionValue","Array","isArray","includes","Option","_ref","data","withCheckIcon","checkIconPosition","unstyled","isOptionsGroup","check","React","createElement","CheckIcon","className","classes","optionsDropdownCheckIcon","Combobox","disabled","cx","_defineProperty","optionsDropdownOption","label","options","items","map","item","key","Group","group","OptionsDropdown","_ref2","hidden","hiddenWhenEmpty","filter","search","limit","maxDropdownHeight","_ref2$withScrollArea","withScrollArea","_ref2$filterOptions","filterOptions","_ref2$withCheckIcon","nothingFoundMessage","labelId","validateOptions","shouldFilter","filteredData","defaultOptionsFilter","Infinity","isEmpty","isEmptyComboboxData","Dropdown","Options","labelledBy","ScrollArea","Autosize","mah","type","scrollbarSize","offsetScrollbars","optionsDropdownScrollArea","Empty"],"sources":["C:\\Users\\vintd\\Documents\\GitHub\\Reserv\\frontend\\node_modules\\@mantine\\core\\src\\components\\Combobox\\OptionsDropdown\\OptionsDropdown.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'clsx';\nimport { ScrollArea } from '../../ScrollArea/ScrollArea';\nimport { CheckIcon } from '../../Checkbox';\nimport { Combobox } from '../Combobox';\nimport { ComboboxItem, ComboboxParsedItem } from '../Combobox.types';\nimport { defaultOptionsFilter, FilterOptionsInput } from './default-options-filter';\nimport { isEmptyComboboxData } from './is-empty-combobox-data';\nimport { isOptionsGroup } from './is-options-group';\nimport { validateOptions } from './validate-options';\nimport classes from '../Combobox.module.css';\n\nexport type OptionsFilter = (input: FilterOptionsInput) => ComboboxParsedItem[];\n\nexport interface OptionsGroup {\n  group: string;\n  items: ComboboxItem[];\n}\n\nexport type OptionsData = (ComboboxItem | OptionsGroup)[];\n\ninterface OptionProps {\n  data: ComboboxItem | OptionsGroup;\n  withCheckIcon?: boolean;\n  value?: string | string[] | null;\n  checkIconPosition?: 'left' | 'right';\n  unstyled: boolean | undefined;\n}\n\nfunction isValueChecked(value: string | string[] | undefined | null, optionValue: string) {\n  return Array.isArray(value) ? value.includes(optionValue) : value === optionValue;\n}\n\nfunction Option({ data, withCheckIcon, value, checkIconPosition, unstyled }: OptionProps) {\n  if (!isOptionsGroup(data)) {\n    const check = withCheckIcon && isValueChecked(value, data.value) && (\n      <CheckIcon className={classes.optionsDropdownCheckIcon} />\n    );\n    return (\n      <Combobox.Option\n        value={data.value}\n        disabled={data.disabled}\n        className={cx({ [classes.optionsDropdownOption]: !unstyled })}\n        data-reverse={checkIconPosition === 'right' || undefined}\n        data-checked={isValueChecked(value, data.value) || undefined}\n        aria-selected={isValueChecked(value, data.value)}\n      >\n        {checkIconPosition === 'left' && check}\n        {data.label}\n        {checkIconPosition === 'right' && check}\n      </Combobox.Option>\n    );\n  }\n\n  const options = data.items.map((item) => (\n    <Option\n      data={item}\n      value={value}\n      key={item.value}\n      unstyled={unstyled}\n      withCheckIcon={withCheckIcon}\n      checkIconPosition={checkIconPosition}\n    />\n  ));\n\n  return <Combobox.Group label={data.group}>{options}</Combobox.Group>;\n}\n\nexport interface OptionsDropdownProps {\n  data: OptionsData;\n  filter: OptionsFilter | undefined;\n  search: string | undefined;\n  limit: number | undefined;\n  withScrollArea: boolean | undefined;\n  maxDropdownHeight: number | string | undefined;\n  hidden?: boolean;\n  hiddenWhenEmpty?: boolean;\n  filterOptions?: boolean;\n  withCheckIcon?: boolean;\n  value?: string | string[] | null;\n  checkIconPosition?: 'left' | 'right';\n  nothingFoundMessage?: React.ReactNode;\n  unstyled: boolean | undefined;\n  labelId: string;\n}\n\nexport function OptionsDropdown({\n  data,\n  hidden,\n  hiddenWhenEmpty,\n  filter,\n  search,\n  limit,\n  maxDropdownHeight,\n  withScrollArea = true,\n  filterOptions = true,\n  withCheckIcon = false,\n  value,\n  checkIconPosition,\n  nothingFoundMessage,\n  unstyled,\n  labelId,\n}: OptionsDropdownProps) {\n  validateOptions(data);\n\n  const shouldFilter = typeof search === 'string';\n  const filteredData = shouldFilter\n    ? (filter || defaultOptionsFilter)({\n        options: data,\n        search: filterOptions ? search : '',\n        limit: limit ?? Infinity,\n      })\n    : data;\n  const isEmpty = isEmptyComboboxData(filteredData);\n\n  const options = filteredData.map((item) => (\n    <Option\n      data={item}\n      key={isOptionsGroup(item) ? item.group : item.value}\n      withCheckIcon={withCheckIcon}\n      value={value}\n      checkIconPosition={checkIconPosition}\n      unstyled={unstyled}\n    />\n  ));\n\n  return (\n    <Combobox.Dropdown hidden={hidden || (hiddenWhenEmpty && isEmpty)}>\n      <Combobox.Options labelledBy={labelId}>\n        {withScrollArea ? (\n          <ScrollArea.Autosize\n            mah={maxDropdownHeight ?? 220}\n            type=\"scroll\"\n            scrollbarSize=\"var(--_combobox-padding)\"\n            offsetScrollbars=\"y\"\n            className={classes.optionsDropdownScrollArea}\n          >\n            {options}\n          </ScrollArea.Autosize>\n        ) : (\n          options\n        )}\n        {isEmpty && nothingFoundMessage && <Combobox.Empty>{nothingFoundMessage}</Combobox.Empty>}\n      </Combobox.Options>\n    </Combobox.Dropdown>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}