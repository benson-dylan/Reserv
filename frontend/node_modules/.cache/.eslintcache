[{"C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\index.js":"1","C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\App.js":"3","C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\pages\\SignUpPage.js":"4","C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\pages\\LoginPage.js":"5","C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\pages\\OrgSearchPage.js":"6","C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\pages\\OrgSettingsPage.js":"7","C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\pages\\LandingPage.js":"8","C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\pages\\OrgReservationsPage.js":"9","C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\pages\\OrgHomePage.js":"10","C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\components\\CreateAccount.js":"11","C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\components\\NavBar.js":"12","C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\components\\Login.js":"13","C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\components\\Org\\OrgSearchPage\\Map.js":"14","C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\components\\Org\\OrgSettingsPage\\SettingsNavigation.tsx":"15","C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\components\\Org\\OrgHomePage\\OrgSearchRoomsForm.js":"16","C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\components\\Org\\OrgHomePage\\LargeCalendar.js":"17"},{"size":838,"mtime":1697770717197,"results":"18","hashOfConfig":"19"},{"size":375,"mtime":1697239496037,"results":"20","hashOfConfig":"19"},{"size":1316,"mtime":1697770717194,"results":"21","hashOfConfig":"19"},{"size":838,"mtime":1697438082058,"results":"22","hashOfConfig":"19"},{"size":798,"mtime":1697438082057,"results":"23","hashOfConfig":"19"},{"size":934,"mtime":1697770717200,"results":"24","hashOfConfig":"19"},{"size":1046,"mtime":1697770717200,"results":"25","hashOfConfig":"19"},{"size":1157,"mtime":1697770717198,"results":"26","hashOfConfig":"19"},{"size":868,"mtime":1697823476880,"results":"27","hashOfConfig":"19"},{"size":3546,"mtime":1697770717199,"results":"28","hashOfConfig":"19"},{"size":2587,"mtime":1697438082046,"results":"29","hashOfConfig":"19"},{"size":3623,"mtime":1697770717195,"results":"30","hashOfConfig":"19"},{"size":2357,"mtime":1697770717195,"results":"31","hashOfConfig":"19"},{"size":941,"mtime":1697559985204,"results":"32","hashOfConfig":"19"},{"size":3976,"mtime":1697770717197,"results":"33","hashOfConfig":"19"},{"size":2368,"mtime":1697559985203,"results":"34","hashOfConfig":"19"},{"size":963,"mtime":1697827235666,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"1yd8tns",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"39"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"39"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"39"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"39"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"39"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\index.js",[],[],["99"],"C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\App.js",[],[],"C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\pages\\SignUpPage.js",["100","101","102","103"],[],"import React, { useState } from 'react';\r\n\r\nimport Login from '../components/Login';\r\nimport CreateAccount from '../components/CreateAccount';\r\nimport NavBar from '../components/NavBar';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LoginPage = () =>\r\n{\r\n    const [show,setShow] = useState(false);\r\n\r\n    return(\r\n        <div id=\"page-container\">\r\n            <div id=\"NavBar\">\r\n                <NavBar />\r\n            </div>\r\n            <div id=\"user-authentication-container\">\r\n                <div id=\"user-authentication-container-elements\">\r\n                    <h1 id=\"user-authetication-title\">Sign Up</h1>\r\n                    <CreateAccount />\r\n                </div> \r\n\r\n                <div className='side-image-container'></div>            \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default LoginPage;\r\n","C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\pages\\LoginPage.js",["104","105","106"],[],"import React, { useState } from 'react';\r\n\r\nimport Login from '../components/Login';\r\nimport CreateAccount from '../components/CreateAccount';\r\nimport NavBar from '../components/NavBar';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LoginPage = () =>\r\n{\r\n\r\n    return(\r\n        <div id=\"page-container\">\r\n            <div id=\"NavBar\">\r\n                <NavBar />\r\n            </div>\r\n            <div id=\"user-authentication-container\">\r\n                <div id=\"user-authentication-container-elements\">\r\n                    <h1 id=\"user-authetication-title\">Login</h1>\r\n                    <Login />\r\n                </div>   \r\n\r\n                <div className='side-image-container'></div>           \r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\nexport default LoginPage;\r\n","C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\pages\\OrgSearchPage.js",["107"],[],"import React from 'react';\r\nimport NavBar from '../components/NavBar';\r\nimport Map from '../components/Org/OrgSearchPage/Map'\r\nimport '../styles/index.css';\r\n\r\nfunction OrgSearchPage()\r\n{\r\n    const handleClick = () => {\r\n        alert(\"Button clicked!\");\r\n    }\r\n\r\n    return (\r\n        <div id=\"OrgSearchPageDiv\">\r\n            <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\r\n            <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\r\n            <link href=\"https://fonts.googleapis.com/css2?family=Gabarito:wght@400;700&display=swap\" rel=\"stylesheet\"></link>\r\n            <div id=\"NavBar\">\r\n                <NavBar />\r\n            </div>\r\n            \r\n            <div id='MapSection'>\r\n                <Map />\r\n            </div>\r\n            <div id=\"ListSection\">\r\n                <h1>Hello</h1>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrgSearchPage;","C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\pages\\OrgSettingsPage.js",["108","109"],[],"import React from 'react';\r\nimport NavBar from '../components/NavBar';\r\nimport { SettingsNavigation } from '../components/Org/OrgSettingsPage/SettingsNavigation.tsx';\r\n// frontend\\src\\components\\Org\\OrgSettingsPage\\SettingsNavigation.tsx\r\nimport { Text, Container } from '@mantine/core';\r\n\r\nimport '../styles/SettingsNavigation.module.css';\r\nimport '../styles/index.css';\r\n\r\nfunction OrgSettingsPage()\r\n{\r\n\r\n    return (\r\n        <div id=\"OrgProfilePageDiv\">\r\n            <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\r\n            <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\r\n            <link href=\"https://fonts.googleapis.com/css2?family=Gabarito:wght@400;700&display=swap\" rel=\"stylesheet\"></link>\r\n\r\n            <header>\r\n                <div id=\"NavBar\">\r\n                    <NavBar />\r\n                </div>\r\n            </header>\r\n\r\n            <div id=\"settings-body\">\r\n                <SettingsNavigation />\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default OrgSettingsPage;","C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\pages\\LandingPage.js",[],[],"C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\pages\\OrgReservationsPage.js",["110"],[],"import React from 'react';\r\nimport NavBar from '../components/NavBar';\r\nimport '../styles/index.css';\r\nimport LargeCalendar from '../components/Org/OrgHomePage/LargeCalendar';\r\n\r\n\r\nfunction OrgReservationsPage()\r\n{\r\n    const handleClick = () => {\r\n        alert(\"Button clicked!\");\r\n    }\r\n\r\n    return (\r\n        <div id=\"OrgReservationsPageDiv\">\r\n            <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\r\n            <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\r\n            <link href=\"https://fonts.googleapis.com/css2?family=Gabarito:wght@400;700&display=swap\" rel=\"stylesheet\"></link>\r\n            <div id=\"NavBar\">\r\n                <NavBar />\r\n            </div>\r\n            <div id=\"CalendarDiv\">\r\n                <LargeCalendar />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrgReservationsPage;","C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\pages\\OrgHomePage.js",[],[],"C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\components\\CreateAccount.js",["111","112"],[],"import React, { useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport Hall from '../images/lecture-hall.jpg';\r\n\r\nfunction CreateAccount()\r\n{\r\n    var createAccountName;\r\n    var createAccountPassword;\r\n    var createAccountFirstName;\r\n    var createAccountLastName;\r\n    const [message,setMessage] = useState('');\r\n\r\n    const doCreateAccount = async event =>\r\n    {\r\n        event.preventDefault();\r\n\r\n        var obj = {userName:createAccountName.value,password:createAccountPassword.value,firstName:createAccountFirstName.value, lastName:createAccountLastName.value};\r\n        var js = JSON.stringify(obj);\r\n        console.log(js);\r\n        try\r\n        {\r\n            const response = await fetch('http://localhost:5000/api/createAccount',\r\n            {method:'POST',\r\n            body:js,\r\n            headers:{'Content-Type':'application/json'}});\r\n\r\n            var txt = await response.text();\r\n            var res = JSON.parse(txt);\r\n            if( res.error.length > 0 )\r\n            {\r\n                setMessage( \"API Error:\" + res.error );\r\n            }\r\n            else\r\n            {\r\n                setMessage('Account Created');\r\n            }\r\n        }\r\n        catch(e)\r\n        {\r\n            alert(e.toString());\r\n            return;\r\n        }\r\n        createAccountName.value=\"\";\r\n        createAccountPassword.value=\"\";\r\n        createAccountFirstName.value=\"\";\r\n        createAccountLastName.value=\"\";\r\n    };\r\n    return(\r\n        <div id=\"loginDiv\">\r\n            <form onSubmit={doCreateAccount}>\r\n                <span id=\"inner-title\">Create an account</span><br />\r\n                <input type=\"text\" class=\"user-authentication-text-form\" id=\"createAccountName\" placeholder=\"Username\"ref={(c) => createAccountName = c} /><br />\r\n                <input type=\"password\" class=\"user-authentication-text-form\" id=\"createAccountPassword\" placeholder=\"Password\" ref={(c) => createAccountPassword = c} /><br />\r\n                <input type=\"text\" class=\"user-authentication-text-form\" id=\"createAccountFirstName\" placeholder=\"First Name\" ref={(c) => createAccountFirstName = c} /><br />\r\n                <input type=\"text\" class=\"user-authentication-text-form\" id=\"createAccountLastName\" placeholder=\"Last Name\" ref={(c) => createAccountLastName = c} /><br />\r\n                <input type=\"submit\" id=\"loginButton\" class=\"user-authentication-buttons\" value=\"Create Account\" onClick={doCreateAccount} />\r\n            </form>\r\n            <span id=\"loginResult\">{message}</span>\r\n        </div>\r\n    );\r\n};\r\nexport default CreateAccount;","C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\components\\NavBar.js",["113"],[],"import React, { useState, useRef, useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport '../styles/index.css'\r\nimport Logo from '../images/reserv-logo.png';\r\nimport MenuIcon from '../images/menu.png';\r\nimport ProfileIcon from '../images/profile-icon.png';\r\n\r\nconst NavBar = () => {\r\n    const location = useLocation();\r\n\r\n    const showIcons = location.pathname === '/' || \r\n          location.pathname === '/Login' || \r\n          location.pathname === '/CreateAccount';\r\n\r\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n    const menuRef = useRef(null);\r\n\r\n    const toggleMenu = () => {\r\n      setIsMenuOpen(!isMenuOpen);\r\n    };\r\n\r\n    const closeMenu = () => {\r\n      setIsMenuOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n      document.body.addEventListener('click', closeMenu);\r\n\r\n      return () => {\r\n        document.body.removeEventListener('click', closeMenu);\r\n      };\r\n    }, []);\r\n\r\n    const stopPropagation = (e) => {\r\n      e.stopPropagation();\r\n    };\r\n\r\n    return (\r\n      <nav className=\"navbar-container\">\r\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\r\n        <link href=\"https://fonts.googleapis.com/css2?family=Gabarito:wght@400;700&display=swap\" rel=\"stylesheet\"></link>\r\n        <div className=\"navbar-left-align\">\r\n          <a href=\"/\">\r\n            <img className=\"navbar-logo\" href=\"/\" src={ Logo } alt=\"Logo\"/>\r\n          </a>\r\n        </div>\r\n        <div className=\"navbar-right-align\">\r\n          { showIcons ? (\r\n            <ul className=\"navbar-links\">\r\n              <li className=\"navbar-button\">\r\n                <Link to=\"/Login\">\r\n                  <button className=\"navbar-sign-in-button\">Sign In</button>\r\n                </Link>\r\n              </li>\r\n              <li className=\"navbar-button\">\r\n                  <Link to=\"/CreateAccount\">\r\n                    <button className=\"navbar-sign-up-button\">Sign Up</button>\r\n                  </Link>\r\n              </li>\r\n            </ul>\r\n          ):(\r\n            <ul className=\"navbar-links\" onClick={stopPropagation} ref={menuRef}>\r\n              <div className=\"navbar-menu-container\">\r\n                <button className=\"navbar-menu-button\" onClick={toggleMenu}>\r\n                  <img src={MenuIcon} alt=\"Menu\" className=\"navbar-icon\"/>\r\n                </button>\r\n              </div>\r\n              \r\n              {/* <li className=\"navbar-button\">\r\n                <img src={ProfileIcon} alt=\"Profile\" className=\"navbar-icon\"/>\r\n              </li> */}\r\n            </ul>\r\n          )}\r\n          {isMenuOpen && (\r\n            <div className=\"navbar-menu\">\r\n\r\n              <Link to=\"/OrgHomePage\">\r\n                <button className=\"navbar-menu-text\" onClick={toggleMenu}>Home</button>\r\n              </Link>\r\n              <Link to=\"/OrgSearchPage\">\r\n                <button className=\"navbar-menu-text\" onClick={toggleMenu}>Search for Rooms</button>\r\n              </Link>\r\n              <Link to=\"/OrgReservationsPage\">\r\n                <button className=\"navbar-menu-text\" onClick={toggleMenu}>Manage Reservations</button>\r\n              </Link>\r\n              <Link to=\"/OrgSettingsPage\">\r\n                <button className=\"navbar-menu-text\" onClick={toggleMenu}>Settings</button>\r\n              </Link>\r\n              <Link to=\"/\">\r\n                <button className=\"navbar-menu-text\" onClick={toggleMenu}>Log Out</button>\r\n              </Link>\r\n\r\n            </div>\r\n          )}\r\n        </div>\r\n      </nav>\r\n    );\r\n  };\r\n\r\nexport default NavBar;","C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\components\\Login.js",["114"],[],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/index.css'\r\n\r\nfunction Login()\r\n{\r\n    var loginName;\r\n    var loginPassword;\r\n    const [message,setMessage] = useState('');\r\n    \r\n\r\n    const doLogin = async event =>\r\n    {\r\n        event.preventDefault();\r\n\r\n        var obj = {login:loginName.value,password:loginPassword.value};\r\n        var js = JSON.stringify(obj);\r\n        console.log(js);\r\n        try\r\n        {\r\n            const response = await fetch('http://localhost:5000/api/login',\r\n            {method:'POST',\r\n            body:js,\r\n            headers:{'Content-Type':'application/json'}});\r\n\r\n            var res = JSON.parse(await response.text());\r\n            if( res.id <= 0 )\r\n            {\r\n                setMessage('User/Password combination incorrect');\r\n            }\r\n            else\r\n            {\r\n                var user =\r\n                {firstName:res.firstName,lastName:res.lastName,id:res.id};\r\n                alert(res.id);        \r\n                localStorage.setItem('user_data', JSON.stringify(user));\r\n                alert(localStorage.id);\r\n                setMessage('');\r\n                window.location.href = '/OrgHomePage';\r\n            }\r\n        }\r\n        catch(e)\r\n        {\r\n            alert(e.toString());\r\n            return;\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div id=\"loginDiv\">\r\n            <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\r\n            <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\r\n            <link href=\"https://fonts.googleapis.com/css2?family=Gabarito:wght@400;700&display=swap\" rel=\"stylesheet\"></link>\r\n            <form onSubmit={doLogin}>\r\n            <span id=\"inner-title\">Please Log In</span><br />\r\n            <input type=\"text\" class=\"user-authentication-text-form\" id=\"loginName\" placeholder=\"Username\"ref={(c) => loginName = c} required/><br />\r\n            <input type=\"password\" class=\"user-authentication-text-form\" id=\"loginPassword\" placeholder=\"Password\" ref={(c) => loginPassword = c} required /><br />\r\n            <input type=\"submit\" id=\"loginButton\" class=\"user-authentication-buttons\" value = \"Login\" onClick={doLogin} />\r\n            </form>\r\n            <span id=\"loginResult\">{message}</span>\r\n        </div>\r\n    );\r\n};\r\nexport default Login;","C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\components\\Org\\OrgSearchPage\\Map.js",["115","116"],[],"import React from 'react';\r\nimport { GoogleMap, Marker, useLoadScript } from \"@react-google-maps/api\";\r\nimport { useMemo } from \"react\";\r\n\r\nfunction Map()\r\n{\r\n    const { isLoaded } = useLoadScript({\r\n        googleMapsApiKey: process.env.GOOGLE_MAPS_API,\r\n    });\r\n\r\n    const center = useMemo(() => ({ lat: 18.52043, lng: 73.856743 }), []);\r\n    const myLatLng = {\r\n        lat: 28.602333068847656,\r\n        lng: -81.20020294189453\r\n      };\r\n\r\n    return(\r\n        <div className=\"MapDiv\">\r\n            {!isLoaded ? (\r\n                <h1>Loading...</h1>\r\n            ) : (\r\n                <GoogleMap\r\n                mapContainerClassName=\"map-container\"\r\n                center={myLatLng}\r\n                zoom={14}\r\n                fullscreenControl={false}\r\n                streetView={false}\r\n                options={{mapId: '3b7df45197247861'}}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Map;","C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\components\\Org\\OrgSettingsPage\\SettingsNavigation.tsx",["117"],[],"import React from 'react';\r\nimport { useState } from 'react';\r\nimport {\r\n  IconBellRinging,\r\n  IconKey,\r\n  IconSettings,\r\n  IconBuildingCommunity,\r\n  IconUser,\r\n} from '@tabler/icons-react';\r\nimport { MantineLogo } from '@mantine/ds';\r\nimport '@mantine/core/styles.css';\r\nimport classes from '../../../styles/SettingsNavigation.module.css';\r\n\r\nconst data = [\r\n  { link: '', label: 'Organization Info', icon: IconUser },\r\n  { link: '', label: 'University Info', icon: IconBuildingCommunity },\r\n  { link: '', label: 'Notifications', icon: IconBellRinging },\r\n  { link: '', label: 'Login Info', icon: IconKey },\r\n  { link: '', label: 'Other Settings', icon: IconSettings },\r\n];\r\n\r\nfunction OrganizationInfo() {\r\n  return (\r\n    <div>\r\n      <h2>Profile</h2>\r\n      <label>Organization Name: <input type=\"text\" /></label><br />\r\n      <label>Description: <input type=\"text\" /></label><br />\r\n      <label>Authorized Officer's First Name: <input type=\"text\" /></label><br />\r\n      <label>Authorized Officer's Last Name: <input type=\"text\" /></label><br />\r\n      <label>Email: <input type=\"text\" /></label><br />\r\n      <label>Phone Number: <input type=\"text\" /></label><br />\r\n      <label>Faculty Advisor: <input type=\"text\" /></label><br />\r\n      <label>Faculty Advisor Email: <input type=\"text\" /></label><br />\r\n      <label>Secondary Contact Name: <input type=\"text\" /></label><br />\r\n      <label>Secondary Contact Email: <input type=\"text\" /></label><br />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction UniversityInfo() {\r\n  return (\r\n    <div>\r\n      <h2>University</h2>\r\n      <p>University Name: University of Central Florida</p>\r\n      <p>Address: 3400 Quadrangle Blvd, Orlando, FL 32817</p>\r\n      <p>Phone Number: (407) 266-3627</p>\r\n      <p>Email: Your University Email</p>\r\n      <p>Hours: M-F 8AM-7PM</p>\r\n      <p>Website: ucf.edu</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Notifications() {\r\n  const [reminders, setReminders] = useState(true);\r\n\r\n  const toggleReminders = () => {\r\n    setReminders(!reminders);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Notifications</h2>\r\n      <label>Reminders for Upcoming Events:</label>\r\n      <input type=\"checkbox\" checked={reminders} onChange={toggleReminders} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction LoginInfo() {\r\n  return (\r\n    <div>\r\n      <h2>User Settings</h2>\r\n      <label>Change Username: <input type=\"text\" /></label><br />\r\n      <label>Change Password: <input type=\"password\" /></label><br />\r\n      <label>Delete Account: <button>Delete</button></label>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction OtherSettings() {\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  const toggleDarkMode = () => {\r\n    setDarkMode(!darkMode);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Other Settings</h2>\r\n      <label>Dark Mode:</label>\r\n      <input type=\"checkbox\" checked={darkMode} onChange={toggleDarkMode} />\r\n    </div>\r\n  );\r\n}\r\nexport function SettingsNavigation() {\r\n  const [active, setActive] = useState('Organization Info');\r\n\r\n  const components = {\r\n    'Organization Info': <OrganizationInfo />,\r\n    'University Info': <UniversityInfo />,\r\n    'Notifications': <Notifications />,\r\n    'Login Info': <LoginInfo />,\r\n    'Other Settings': <OtherSettings />,\r\n  };\r\n\r\n  const activeComponent = components[active] || null;\r\n\r\n  const links = data.map((item) => (\r\n    <a\r\n      className={classes.link}\r\n      data-active={item.label === active || undefined}\r\n      href={item.link}\r\n      key={item.label}\r\n      onClick={(event) => {\r\n        event.preventDefault();\r\n        setActive(item.label);\r\n      }}\r\n    >\r\n      <item.icon className={classes.linkIcon} stroke={2} />\r\n      <span>{item.label}</span>\r\n    </a>\r\n  ));\r\n\r\n  return (\r\n    <div className={classes.settingsContainer}>\r\n      <div className={classes.navigation}>\r\n        <nav className={classes.navbar}>\r\n          {links}     \r\n        </nav>\r\n      </div>\r\n\r\n      <div className={classes.info}>\r\n        {activeComponent}\r\n      </div>\r\n    </div>\r\n  );\r\n}",["118"],"C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\components\\Org\\OrgHomePage\\OrgSearchRoomsForm.js",[],[],"C:\\Users\\dylan\\GitHub\\Reserv\\frontend\\src\\components\\Org\\OrgHomePage\\LargeCalendar.js",["119","120","121"],[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":13},{"ruleId":"124","severity":1,"message":"128","line":6,"column":10,"nodeType":"126","messageId":"127","endLine":6,"endColumn":14},{"ruleId":"124","severity":1,"message":"129","line":10,"column":12,"nodeType":"126","messageId":"127","endLine":10,"endColumn":16},{"ruleId":"124","severity":1,"message":"130","line":10,"column":17,"nodeType":"126","messageId":"127","endLine":10,"endColumn":24},{"ruleId":"124","severity":1,"message":"131","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"132","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":21},{"ruleId":"124","severity":1,"message":"128","line":6,"column":10,"nodeType":"126","messageId":"127","endLine":6,"endColumn":14},{"ruleId":"124","severity":1,"message":"133","line":8,"column":11,"nodeType":"126","messageId":"127","endLine":8,"endColumn":22},{"ruleId":"124","severity":1,"message":"134","line":5,"column":10,"nodeType":"126","messageId":"127","endLine":5,"endColumn":14},{"ruleId":"124","severity":1,"message":"135","line":5,"column":16,"nodeType":"126","messageId":"127","endLine":5,"endColumn":25},{"ruleId":"124","severity":1,"message":"133","line":9,"column":11,"nodeType":"126","messageId":"127","endLine":9,"endColumn":22},{"ruleId":"124","severity":1,"message":"136","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":16},{"ruleId":"124","severity":1,"message":"137","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":12},{"ruleId":"124","severity":1,"message":"138","line":6,"column":8,"nodeType":"126","messageId":"127","endLine":6,"endColumn":19},{"ruleId":"124","severity":1,"message":"128","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":14},{"ruleId":"124","severity":1,"message":"139","line":2,"column":21,"nodeType":"126","messageId":"127","endLine":2,"endColumn":27},{"ruleId":"124","severity":1,"message":"140","line":11,"column":11,"nodeType":"126","messageId":"127","endLine":11,"endColumn":17},{"ruleId":"141","severity":1,"message":"142","line":10,"column":10,"nodeType":"126","messageId":"127","endLine":10,"endColumn":21},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"131","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"143","line":7,"column":8,"nodeType":"126","messageId":"127","endLine":7,"endColumn":18},{"ruleId":"124","severity":1,"message":"144","line":32,"column":11,"nodeType":"126","messageId":"127","endLine":32,"endColumn":15},"no-new-object",["145"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","'useState' is defined but never used.","'CreateAccount' is defined but never used.","'handleClick' is assigned a value but never used.","'Text' is defined but never used.","'Container' is defined but never used.","'Button' is defined but never used.","'Hall' is defined but never used.","'ProfileIcon' is defined but never used.","'Marker' is defined but never used.","'center' is assigned a value but never used.","@typescript-eslint/no-unused-vars","'MantineLogo' is defined but never used.","'DatePicker' is defined but never used.","'view' is assigned a value but never used.","no-object-constructor"]